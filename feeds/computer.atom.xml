<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Suhen's blog</title><link href="http://blog.suhen.org/" rel="alternate"></link><link href="http://blog.suhen.org/feeds/computer.atom.xml" rel="self"></link><id>http://blog.suhen.org/</id><updated>2013-12-27T18:46:00+08:00</updated><entry><title>[Lua] table sort by key</title><link href="http://blog.suhen.org/computer/lua_table_sort_by_key.html" rel="alternate"></link><updated>2013-12-27T18:46:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-12-27:computer/lua_table_sort_by_key.html</id><summary type="html">&lt;p&gt;用key來排序:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;pairsByKeys&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;pairs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="nb"&gt;table.insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="nb"&gt;table.sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;      &lt;span class="c1"&gt;-- iterator variable&lt;/span&gt;
  &lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;iter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;   &lt;span class="c1"&gt;-- iterator function&lt;/span&gt;
    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;iter&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;luaH_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;luaH_get&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;luaH_present&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;pairsByKeys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;來源: &lt;a href="http://www.lua.org/pil/19.3.html"&gt;Programming in Lua : 19.3&lt;/a&gt;&lt;/p&gt;</summary><category term="lua"></category></entry><entry><title>web develop</title><link href="http://blog.suhen.org/computer/web-develop.html" rel="alternate"></link><updated>2013-12-18T18:08:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-12-18:computer/web-develop.html</id><summary type="html">&lt;h1&gt;layout&lt;/h1&gt;
&lt;p&gt;圖片塞滿browser&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://paulmason.name/item/full-screen-background-image-pure-css-code"&gt;Full Screen Background Image - Pure CSS Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="html"></category><category term="css"></category></entry><entry><title>Deploying Flask (Python) to AWS Elastic Beanstalk</title><link href="http://blog.suhen.org/computer/aws_elastic_beanstalk_flask.html" rel="alternate"></link><updated>2013-11-12T17:31:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-11-12:computer/aws_elastic_beanstalk_flask.html</id><summary type="html">&lt;h1&gt;quickstart&lt;/h1&gt;
&lt;h2&gt;1. 安裝eb commend tools&lt;/h2&gt;
&lt;p&gt;下載: &lt;a href="http://aws.amazon.com/code/6752709412171743"&gt;AWS Elastic Beanstalk Command Line Tool : Sample Code &amp;amp; Libraries : Amazon Web Services&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;設定好路徑(以mac為例), 就可以開始了&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;AWS-ElasticBeanstalk-CLI-2.5.1/eb/macosx/python2.7/eb

&lt;span class="c"&gt;# 環境變數, 可以在shell下export或是寫在~/.elasticbeanstalk/aws_credential_file裡 (忘記是我自己加的還是eb工具自動加的)&lt;/span&gt;
&lt;span class="nv"&gt;AWSAccessKeyId&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Write your AWS access ID
&lt;span class="nv"&gt;AWSSecretKey&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Write your AWS secret key
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;2. 準備部署&lt;/h2&gt;
&lt;h3&gt;WSGI&lt;/h3&gt;
&lt;p&gt;預設是application.py:application, 自己要改application.py名字失敗..&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;[aws:elasticbeanstalk:container:python]
...
WSGIPath=my_fail_wsgi
eb update?
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;連接原本的RDS&lt;/h3&gt;
&lt;p&gt;要去RDS的security group那裡新增一個(因為等於是開了一個新的EC2)，通常是awseb-xxx 開頭的&lt;/p&gt;
&lt;h3&gt;Elastic Beanstalk沒有filesystem&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;所以原本的media檔要改存到S3&lt;/li&gt;
&lt;li&gt;原本logger有自己存檔, 也要取消 (反正會出現在eb的log裡)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;3. 跑起來&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# 在git目錄下操作, 如果沒有repo就會叫你git init&lt;/span&gt;
eb init
&lt;span class="c"&gt;# 會有選單, 開始勾選&lt;/span&gt;
&lt;span class="c"&gt;# 平台選這個&lt;/span&gt;
64bit Amazon Linux 2013.09 running Python 2.7
&lt;span class="c"&gt;# 勾完後, 就可以啟動餓了&lt;/span&gt;
eb start
&lt;span class="c"&gt;# 問你要用那個version deploy, 預設最新的&lt;/span&gt;
&lt;span class="c"&gt;# 等個幾分鐘&lt;/span&gt;

&lt;span class="c"&gt;# 改程式後git commit&lt;/span&gt;
&lt;span class="c"&gt;# git aws.push -&amp;gt; 自動傳到eb環境&lt;/span&gt;

&lt;span class="c"&gt;# 其他指令&lt;/span&gt;
eb status --verbose
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;其他設定&lt;/h2&gt;
&lt;h3&gt;環境設定&lt;/h3&gt;
&lt;p&gt;產生 &lt;strong&gt;.ebextensions&lt;/strong&gt;目錄, 新增 python.config:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nl"&gt;option_settings:&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;aws:elasticbeanstalk:container:python:staticfiles&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;/static/&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;myapp/static/&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options.html#command-options-python"&gt;Option Values - AWS Elastic Beanstalk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;custom domain&lt;/h3&gt;
&lt;p&gt;到原domain註冊商去加一筆CNAME, 指到EB提供的public url&lt;/p&gt;
&lt;h3&gt;參考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_Python_flask.html"&gt;Deploying a Flask Application to AWS Elastic Beanstalk - AWS Elastic Beanstalk&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="http://aws.amazon.com/elasticbeanstalk/faqs/"&gt;AWS Elastic Beanstalk FAQs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.RDS.html"&gt;Using AWS Elastic Beanstalk with Amazon RDS - AWS Elastic Beanstalk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;eb stop&lt;/h2&gt;
&lt;p&gt;rds的security group要拿掉, 否則會失敗&lt;/p&gt;
&lt;p&gt;http://blog.uptill3.com/2012/08/25/python-on-elastic-beanstalk.html
http://stackoverflow.com/questions/14077095/aws-elastic-beanstalk-running-a-cronjob
https://github.com/keithters/elasticbeanstalk-mysql-rds-flask
https://github.com/adamcrosby/elastic-flask-baseline&lt;/p&gt;</summary><category term="flask"></category><category term="aws"></category></entry><entry><title>Corona SDK串接Facebook</title><link href="http://blog.suhen.org/computer/corona_sdk_facebook.html" rel="alternate"></link><updated>2013-11-07T20:00:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-11-07:computer/corona_sdk_facebook.html</id><summary type="html">&lt;p&gt;Corona SDK提供了&lt;a href="http://docs.coronalabs.com/api/library/facebook/index.html"&gt;facebook API&lt;/a&gt;可以很方便的跟facebook串接。&lt;/p&gt;
&lt;h1&gt;1. facebook app id&lt;/h1&gt;
&lt;p&gt;先到developers.facebook.com產生一個app，取得app id&lt;/p&gt;
&lt;h1&gt;2. 設定&lt;/h1&gt;
&lt;h2&gt;Android&lt;/h2&gt;
&lt;h3&gt;keyhash&lt;/h3&gt;
&lt;p&gt;如果是android的話，需要產生keyhash，回填到developers.facebook.com的app&lt;/p&gt;
&lt;p&gt;可以用corona sdk提供的debug.keystore&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/Applications/CoronaSDK/Resource Library/Android/debug.keystore
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在mac上用JavaVM提供的keytool指令，產生android的keyhash&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/System/Library/Frameworks/JavaVM.framework/Versions/A/Commands/keytool -exportcert -alias androiddebugkey -keystore /path/to/debug.keystore | openssl sha1 -binary | openssl base64
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果keyhash有問題的話，可以在裝置上看debug log，會出現:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Key hash [這一串是keyhash] does not match any stored key hashes.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;也可以拿來回填~&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;補充&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# 列出alias
keytool -list -keystore foo.keystore
# 產生keystore
keytool -genkey -v -keystore mykeystore.keystore -alias aliasname -keyalg RSA -validity 999999
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;class name&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;com.ansca.corona.CoronaActivity
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;iOS&lt;/h2&gt;
&lt;p&gt;build.settings:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;settings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="n"&gt;iphone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;plist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="n"&gt;UIApplicationExitsOnSuspend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="n"&gt;FacebookAppID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;934738748374738&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="n"&gt;CFBundleURLTypes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
         &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
               &lt;span class="n"&gt;CFBundleURLSchemes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
               &lt;span class="p"&gt;{&lt;/span&gt;
                  &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;fb934738748374738&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
   &lt;span class="p"&gt;},&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://coronalabs.com/blog/2013/07/30/understanding-facebook-authentication/"&gt;Understanding Facebook Authentication | Corona Labs&lt;/a&gt;&lt;/p&gt;</summary><category term="corona_sdk"></category><category term="facebook"></category></entry><entry><title>[Mac] 從Leopard升級到Mavericks</title><link href="http://blog.suhen.org/computer/mac_leopard_mavericks.html" rel="alternate"></link><updated>2013-11-02T00:46:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-11-02:computer/mac_leopard_mavericks.html</id><summary type="html">&lt;p&gt;家裡一台很舊的iMac，作業系統跑Leopard (OS X 10.5.8)，很多軟體都不支援如 LINE桌面版... ，或是連Chrome都不更新了，倒是Firefox還很照顧這些老電腦...&lt;/p&gt;
&lt;p&gt;最近Mavericks開放免費更新，我的MacBook Air (Lion) 免費升級新的Mavericks後，覺得很好用，實在也很想更新這台iMac，Leopard一般是無法直接升級到Mavericks的，除非花一點錢，先升級成Snow Leopard (OS X 10.6)，才可以免費升級到Mavericks。但是網路上果然有解決方法！！&lt;/p&gt;
&lt;p&gt;參考這篇: &lt;a href="http://www.macworld.com/article/2056564/how-to-install-mavericks-over-leopard.html"&gt;How to install Mavericks over Leopard | Macworld&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;1. 下載Mavericks&lt;/h1&gt;
&lt;p&gt;我的MacBook Air已經更新10.9了，但還是可以再下載。&lt;/p&gt;
&lt;p&gt;改一個系統檔:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/System/Library/CoreServices/SystemVersion.plist
# 把10.9的地方改稱10.8
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然後到iTunes Mavericks官方頁面&lt;a href="https://itunes.apple.com/tw/app/id675248567?mt=12"&gt;Mavericks&lt;/a&gt;就可以"重新"下載了。下載完的檔案會放在 &lt;em&gt;/Applications/Install\ OS\ X\ Mavericks.app&lt;/em&gt;，大概有5G多，iTunes載完會自動跳出安裝視窗，但是先不理他，可以把這個目錄copy到其他地方，不然系統以為安裝完後就會自動殺掉。&lt;/p&gt;
&lt;h1&gt;2. 製作開機磁碟&lt;/h1&gt;
&lt;p&gt;用Terminal打入以下:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo /Applications/Install&lt;span class="se"&gt;\ &lt;/span&gt;OS&lt;span class="se"&gt;\ &lt;/span&gt;X&lt;span class="se"&gt;\ &lt;/span&gt;Mavericks.app/Contents/Resources/createinstallmedia --volume /Volumes/MY_EXTURNAL_HD --applicationpath /Applications/Install&lt;span class="se"&gt;\ &lt;/span&gt;OS&lt;span class="se"&gt;\ &lt;/span&gt;X&lt;span class="se"&gt;\ &lt;/span&gt;Mavericks.app --nointeraction
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;訊息跑完後就好了。(原本磁碟內容會消除)&lt;/p&gt;
&lt;p&gt;ref: &lt;a href="http://www.macworld.com/article/2056561/how-to-make-a-bootable-mavericks-install-drive.html"&gt;How to make a bootable Mavericks install drive | Macworld&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;3. 安裝&lt;/h1&gt;
&lt;p&gt;改系統檔(不確定這是不是一定要):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/System/Library/CoreServices/SystemVersion.plist
# 把10.5.8改成10.68
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;外接硬碟接上iMac，重新開機。開機時按住&lt;em&gt;Option&lt;/em&gt;會跳出選擇開機磁碟，就選剛才製作好的開機碟。就會開始自動安裝了。 爽快。&lt;/p&gt;</summary><category term="note"></category></entry><entry><title>Lua String / 字串</title><link href="http://blog.suhen.org/computer/lua_string.html" rel="alternate"></link><updated>2013-10-01T12:36:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-10-01:computer/lua_string.html</id><summary type="html">&lt;h1&gt;Standard&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;string.find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="nb"&gt;string.format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e2&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;string.sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="nb"&gt;string.len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;string.gmatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;string.gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;replace&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="nb"&gt;string.lower&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;string.upper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;string.byte&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;A&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;-- 65&lt;/span&gt;
&lt;span class="nb"&gt;string.char&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;-- A&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;regular expression (patterns)&lt;/h1&gt;
&lt;table align="center" border="1"&gt;
&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;.&lt;/code&gt;&lt;/td&gt;&lt;td&gt;all characters&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;%a&lt;/code&gt;&lt;/td&gt;&lt;td&gt;letters&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;%c&lt;/code&gt;&lt;/td&gt;&lt;td&gt;control characters&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;%d&lt;/code&gt;&lt;/td&gt;&lt;td&gt;digits&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;%l&lt;/code&gt;&lt;/td&gt;&lt;td&gt;lower case letters&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;%p&lt;/code&gt;&lt;/td&gt;&lt;td&gt;punctuation characters&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;%s&lt;/code&gt;&lt;/td&gt;&lt;td&gt;space characters&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;%u&lt;/code&gt;&lt;/td&gt;&lt;td&gt;upper case letters&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;%w&lt;/code&gt;&lt;/td&gt;&lt;td&gt;alphanumeric characters&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;%x&lt;/code&gt;&lt;/td&gt;&lt;td&gt;hexadecimal digits&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;%z&lt;/code&gt;&lt;/td&gt;&lt;td&gt;the character with representation 0&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;大寫表示逆向，例如: &lt;strong&gt;%A&lt;/strong&gt; 就是非字串的意思&lt;/p&gt;
&lt;p&gt;特殊字元:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ex:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;string.gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;hello, up-down!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%A&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;-- hello..up.down. 4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;相關連結&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://lua-users.org/wiki/StringLibraryTutorial"&gt;lua-users wiki: String Library Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lua.org/pil/2.4.html"&gt;Programming in Lua : 2.4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="lua"></category></entry><entry><title>[snippet] Corona SDK 顯示各種資訊</title><link href="http://blog.suhen.org/computer/corona_sdk_info.html" rel="alternate"></link><updated>2013-10-01T10:31:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-10-01:computer/corona_sdk_info.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;info&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;========= display info =========&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;string.format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;pixel: %dx%d, ratio: %.02f&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                        &lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pixelWidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pixelHeight&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pixelHeight&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pixelWidth&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;string.format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;content: %dx%d, ratio: %.02f&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                        &lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contentWidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contentHeight&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contentHeight&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contentWidth&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;string.format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;actual: %dx%d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;actualContentWidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;actualContentHeight&lt;/span&gt;
                        &lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;string.format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;scale: (%.02f, %.02f)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                         &lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contentScaleX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                         &lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contentScaleY&lt;/span&gt;
                        &lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;string.format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;origin: (%d, %d)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                         &lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screenOriginX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                         &lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screenOriginY&lt;/span&gt;
                        &lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;-------- system.getInfo --------&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;prop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;model&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;platformName&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;platformVersion&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;environment&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;architectureInfo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;build&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;appname&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;appVersionString&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;deviceID&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;maxTexturueSize&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;maxTextureUnits&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;textureMemoryUsed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;targetAppStore&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;iosAdvertisingIdentifier&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;iosAdvertisingTrackingEnabled&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;iosIdentifierForVendor&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;androidDisplayApproximateDpi&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;androidDisplayDensityName&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;androidDisplayXDpi&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;androidDisplayYDpi&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;pairs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;string.format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;%s: %s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;nil&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;--------- language ----------&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;string.format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;locale.country: %s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                        &lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getPreference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;locale&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;country&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;string.format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;locale.idettifier: %s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getPreference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;locale&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;identifier&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;string.format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;locale.language: %s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getPreference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;locale&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;language&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;string.format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;ui.language: %s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getPreference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;ui&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;language&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;===============================&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="snippet"></category><category term="corona_sdk"></category></entry><entry><title>[電腦] 小工具 - Lua的debug函式</title><link href="http://blog.suhen.org/computer/lua_debug.html" rel="alternate"></link><updated>2013-09-23T12:26:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-09-23:computer/lua_debug.html</id><summary type="html">&lt;p&gt;Lua的debug library有很多資訊可用:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;-- ## lua debug function&lt;/span&gt;
&lt;span class="c1"&gt;-- # 1: simple print, 就跟print一樣&lt;/span&gt;
&lt;span class="c1"&gt;-- # 2: verbose info, 印出呼叫的函式名稱跟函式所在的檔案行數&lt;/span&gt;

&lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;debug_level&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; 
&lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;debug_level&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;&amp;gt;&amp;gt; log: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="n"&gt;debug_level&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
            &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;debug.getinfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;Sln&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;func_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
            &lt;span class="n"&gt;ln&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;currentline&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;?&amp;quot;&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;------ log -------&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;&amp;gt;&amp;gt; &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;&amp;gt;&amp;gt; &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;short_src&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;:&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="n"&gt;ln&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;:&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="n"&gt;func_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.lua.org/pil/23.html"&gt;Programming in Lua : 23&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="lua"></category><category term="snippet"></category></entry><entry><title>Lua的3元運算子 (Ternary Operator)</title><link href="http://blog.suhen.org/computer/lua_ternary.html" rel="alternate"></link><updated>2013-09-23T00:39:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-09-23:computer/lua_ternary.html</id><summary type="html">&lt;p&gt;很多語言都有簡潔的3元運算, 但是lua不支援這樣的語法.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// C&lt;/span&gt;
&lt;span class="n"&gt;sign&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;negative&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;non-negative&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;action&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;default&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;action&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Python&lt;/span&gt;
&lt;span class="s"&gt;&amp;#39;true&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;false&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// JavaScript&lt;/span&gt;
&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;不過, 還是可以利用 &lt;strong&gt;and&lt;/strong&gt;, &lt;strong&gt;or&lt;/strong&gt; 運算子的特性來達成. 例如:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;x is &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;negative&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;non-negative&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;x is &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;..&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;negative&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="s"&gt;non-negative&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;-- 這樣好懂一點&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;道理何在?!&lt;/p&gt;
&lt;p&gt;主要是利用 &lt;strong&gt;and&lt;/strong&gt; 和 &lt;strong&gt;or&lt;/strong&gt; 的優先循序規則看以下例子:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;hello&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;hello&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;there&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;-- hello   there&lt;/span&gt;
&lt;span class="c1"&gt;-- a, b 都是 *true*, 回傳b (第二個)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;hello&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;there&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;-- hello   1&lt;/span&gt;
&lt;span class="c1"&gt;-- a,b 都是 *true*, 回傳a (第一個)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lua是很活的語言, 另外還可以用很多不同方式實現, 有興趣的人可以參考一下連結:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lua-users.org/wiki/TernaryOperator"&gt;lua-users wiki: Ternary Operator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lua-users.org/wiki/ExpressionsTutorial"&gt;lua-users wiki: Expressions Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="lua"></category></entry><entry><title>強大的Emacs Macro 巨集</title><link href="http://blog.suhen.org/computer/emacs_macro.html" rel="alternate"></link><updated>2013-08-30T12:06:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-08-30:computer/emacs_macro.html</id><summary type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;基本操作&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;C-x&lt;/span&gt; (&lt;/tt&gt; 開始錄製&lt;/li&gt;
&lt;li&gt;胡搞瞎搞&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;C-x&lt;/span&gt; )&lt;/tt&gt; 結束&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;C-x&lt;/span&gt; e&lt;/tt&gt; ABASE&lt;/li&gt;
&lt;/ol&gt;
&lt;hr class="docutils" /&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;執行多次 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;C-u&lt;/span&gt; 次數 &lt;span class="pre"&gt;C-x&lt;/span&gt; e&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;C-x&lt;/span&gt; &lt;span class="pre"&gt;C-k&lt;/span&gt; n FOO&lt;/tt&gt; 給macro取名字&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;M-x&lt;/span&gt; FOO&lt;/tt&gt; 執行&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;M-x&lt;/span&gt; &lt;span class="pre"&gt;insert-kbd-macro&lt;/span&gt;&lt;/tt&gt; 把macro存到設定檔, 他會問你要存那個macro name&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="emacs"></category></entry><entry><title>用Emacs的skeleton快速建立pelican的blog內文</title><link href="http://blog.suhen.org/computer/emacs_skeleton.html" rel="alternate"></link><updated>2013-08-27T18:07:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-08-27:computer/emacs_skeleton.html</id><summary type="html">&lt;p&gt;用 &lt;a class="reference external" href="http://blog.suhen.org/computer/pelican.html"&gt;Pelican&lt;/a&gt; 寫blog時都要輸入一堆metadata很麻煩, 利用 &lt;a class="reference external" href="http://blog.suhen.org/computer/emacs.html"&gt;Emacs&lt;/a&gt; 的skeleton-mode可以很快產生template, 接受mini-buffer輸入, insert lisp function...超方便!!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;define-skeleton&lt;/span&gt; &lt;span class="nv"&gt;insert-pelican-template&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;Insert templete for pelican static blog system&amp;quot;&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;skeleton-read&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Title: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nv"&gt;?\n&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;#############################&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;?\n&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;:date: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;insert-current-date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;?\n&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;:category: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;skeleton-read&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;category: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;?\n&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;:tags: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;skeleton-read&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;tags: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;?\n&lt;/span&gt;
  &lt;span class="s"&gt;&amp;quot;:slug: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;skeleton-read&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;slug: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;?\n&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;參考:
&lt;a class="reference external" href="http://www.emacswiki.org/emacs/SkeletonMode"&gt;EmacsWiki: Skeleton Mode&lt;/a&gt;&lt;/p&gt;
</summary><category term="emacs"></category></entry><entry><title>Python</title><link href="http://blog.suhen.org/computer/python.html" rel="alternate"></link><updated>2013-07-10T14:02:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-07-10:computer/python.html</id><summary type="html">&lt;div class="section" id="quick-start"&gt;
&lt;h2&gt;Quick Start&lt;/h2&gt;
&lt;p&gt;path:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
(Mac)$ /Library/Python/2.7/site-packages
&lt;/pre&gt;
&lt;p&gt;snippets:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# -.- coding: utf-8 -.-&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;struct dict:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;dishes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;eggs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;sausage&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;bacon&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;spam&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;if/else三元運算 (ternary operator):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
A = Y if X else Z
&lt;/pre&gt;
&lt;div class="section" id="regular-expression"&gt;
&lt;h3&gt;regular expression&lt;/h3&gt;
&lt;p&gt;只留a-z, A-Z, 0-9:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;[^a-zA-Z_0-9]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;did&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;parse出每個sql欄位
.. code-block:: python&lt;/p&gt;
&lt;blockquote&gt;
# (1, 'The Three Little Pigs', '三隻小豬', 350, '這是有關於三隻...', 28, 16000, 'en', 280, ''),
m = re.match(r'((d+), '(.*)', '(.*)', (d+), '(.*)', (d+), (d+), '(.*)', (d+), '(.*)')', i)&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="list-compension"&gt;
&lt;h3&gt;list compension&lt;/h3&gt;
&lt;p&gt;印出a到z&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;a2z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

&lt;span class="c"&gt;# 也可以加上tenary operator [ Y if X else Z for i in LIST]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;sort list(用mydict的foo去排序):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
output = sorted(mydict, key = lambda x:x['foo'])
&lt;/pre&gt;
&lt;p&gt;lambda function:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
lower = (lambda x, y: x if x &amp;lt; y else y)
lower ('bb', 'aa') # aa
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="string"&gt;
&lt;h3&gt;string&lt;/h3&gt;
&lt;p&gt;format:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
'{0:.2f}'.format(init_scale) # 小數點後兩位
'{0:02d}'.format(dtime.tm_mon) # 補2位0
&lt;/pre&gt;
&lt;p&gt;replace&lt;/p&gt;
&lt;pre class="literal-block"&gt;
string.replace('old', 'new')
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="time"&gt;
&lt;h3&gt;time&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;time format&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;
&lt;span class="n"&gt;TIME_STR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;%Y%m&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;-%H%M%S&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# 時間字串&lt;/span&gt;

&lt;span class="n"&gt;dtime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utcnow&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c"&gt;# UTC 格式&lt;/span&gt;
&lt;span class="n"&gt;ts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mktime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dtime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timetuple&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="c"&gt;# datetime to unix timestamp&lt;/span&gt;
&lt;span class="n"&gt;ts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c"&gt;# unix timestamp now&lt;/span&gt;
&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromtimestamp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# unix timestamp to datetime&lt;/span&gt;

&lt;span class="n"&gt;dtime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# datetime =&amp;gt; string&lt;/span&gt;
&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dtime&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# =&amp;gt; string to datetime (格式要一樣)&lt;/span&gt;

&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dtime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# 取得年月日0分0時0秒&lt;/span&gt;

&lt;span class="c"&gt;# 取得當周的第1天跟最後一天&lt;/span&gt;
&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;days&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;days&lt;/span&gt;&lt;span class="o"&gt;=+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;算數&lt;/h3&gt;
&lt;p&gt;random:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
import random
random.randint(0,9)

''.join([str(random.randint(1,9)) for i in range(5)]) # 產生5個0-9的字串
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="file"&gt;
&lt;h3&gt;file&lt;/h3&gt;
&lt;p&gt;write:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
f = open('data.txt', 'w')
f.write('Hello\n')
f.close()
&lt;/pre&gt;
&lt;p&gt;read:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
f = open('data.txt') # 預設是 'r'
bytes = f.read() # 讀出內容
# -------------
for line in f:
    print line # 讀出每一行
f.close()
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="basic"&gt;
&lt;h2&gt;Basic&lt;/h2&gt;
&lt;div class="section" id="overview"&gt;
&lt;h3&gt;overview&lt;/h3&gt;
&lt;p&gt;functions are objects in Python, just like everything else. (If you find that confusing wait till you hear that classes are objects in Python, just like everything else!)&lt;/p&gt;
&lt;p&gt;pprint:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
import pprint
pp = pprint.PrettyPrinter(indent=4)
pp.pprint(foo)
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;引數&lt;/h3&gt;
&lt;p&gt;引數傳遞:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;傳值, 引數不回被改&lt;/li&gt;
&lt;li&gt;傳址標, 引數會被改 (list)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;例如:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
def changer(a, b):
    a = 2
    b[0] = 'spam'

X = 1
L = [1, 2]
changer(X, L)
# &amp;gt;&amp;gt;&amp;gt; (1, ['spam', 2])
&lt;/pre&gt;
&lt;p&gt;任意多引數:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
def func(*name): # tuple
    pass
def func(**name): # dict
    pass
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="build-in-functions"&gt;
&lt;h3&gt;build-in functions&lt;/h3&gt;
&lt;p&gt;filter(function, iterable):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[item for item in iterable if function(item)]
&lt;/pre&gt;
&lt;p&gt;map(function, iterable, ...):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
#
&lt;/pre&gt;
&lt;p&gt;sum(iterable[, start]):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
#
&lt;/pre&gt;
&lt;p&gt;all(iterable):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
def all(iterable):
    for element in iterable:
        if not element:
            return False
    return True
&lt;/pre&gt;
&lt;p&gt;any(iterable):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
def any(iterable):
    for element in iterable:
        if element:
            return True
    return False
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="regex"&gt;
&lt;h3&gt;regex&lt;/h3&gt;
&lt;p&gt;re.search()跟re.match()的不同, match()是字串開頭也要符合, search()只要字串中間有符合的pattern就可以了&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://docs.python.org/2/library/re.html#search-vs-match"&gt;7.2. re — Regular expression operations — Python v2.7.6 documentation&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="io-shell-commond-line"&gt;
&lt;h2&gt;IO / shell / commond line&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://docs.python.org/2/library/os.html"&gt;15.1. os — Miscellaneous operating system interfaces — Python v2.7.3 documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;檢查目錄存在:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
os.path.exists('/etc/passwd')
&lt;/pre&gt;
&lt;p&gt;subprocess:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
import subprocess
subprocess.call([&amp;quot;ls&amp;quot;, &amp;quot;-l&amp;quot;]) # 輸入是list, pipe要用popen, 安全一點
subprocess.call([&amp;quot;ls -l&amp;quot;], shell=True) # 完全用系統的shell, pipe, wildcards, 家目錄~都可以用, 參數直接給字串就可以了, 也許會有輸入不乾淨(shell injection)的風險
&lt;/pre&gt;
&lt;p&gt;常用:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
os.getcwd()
os.mkdir(src)
os.rename(src, dst)
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="coding"&gt;
&lt;h2&gt;coding&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.wahahajk.com/2009/08/unicodedecodeerror-ascii-codec-cant.html"&gt;宅之力: 解決方法: UnicodeDecodeError: 'ascii' codec can't decode byte 0xe4 in position 0: ordinal not in range(128)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="tips"&gt;
&lt;h2&gt;Tips&lt;/h2&gt;
&lt;div class="section" id="syntax"&gt;
&lt;h3&gt;syntax&lt;/h3&gt;
&lt;p&gt;變數決定class名稱:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
all_class = { 'my_class' : my_class }
object = all_class['my_class']()
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;coding&lt;/h3&gt;
&lt;p&gt;只留ASCII:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
print &amp;quot;&amp;quot;.join(filter(lambda x: ord(x)&amp;lt;128, did))
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="array"&gt;
&lt;h3&gt;array排序&lt;/h3&gt;
&lt;p&gt;有個dict有title和date二個key, 要指定用date來排序:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
list = []
list.append({'title':'abc','date':1})
list.append({'title':'def','date':2})
list.append({'title':'ghi','date':0})
print sorted(list, key=lambda x: x['date'])
# [{'title': 'ghi', 'date': 0}, {'title': 'abc', 'date': 1}, {'title': 'def', 'date': 2}]
print sorted(list, key=lambda x: x['date'], reverse=True)
# [{'title': 'def', 'date': 2}, {'title': 'abc', 'date': 1}, {'title': 'ghi', 'date': 0}]
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="simple-http-server"&gt;
&lt;h3&gt;simple http server&lt;/h3&gt;
&lt;p&gt;在當下目錄:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ python -m SimpleHTTPServer # 預設的port 8000, http://127.0.0.1:8000
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="coding-style"&gt;
&lt;h2&gt;Coding Style&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.pocoo.org/internal/styleguide/"&gt;The Pocoo Style Guide — Pocoo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://google-styleguide.googlecode.com/svn/trunk/pyguide.html"&gt;Google Python Style Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.python-guide.org/en/latest/writing/style/"&gt;Code Style — The Hitchhiker's Guide to Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="practice"&gt;
&lt;h2&gt;Practice&lt;/h2&gt;
&lt;p&gt;exceptions and/or logging&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SillyWalkMinistry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; handle exception &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;do_silly&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;AttributeError&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;do_invisible&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;SillyWalkMinistry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;整理&lt;/h2&gt;
&lt;p&gt;小括弧整理程式碼:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
X = (A + B +
     C + D)

if (A == 1 and
    B == 2 and
    C == 3):
       print 'spam' * 3
&lt;/pre&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;斜線結尾不好看, 很難注意&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="reference"&gt;
&lt;h2&gt;reference&lt;/h2&gt;
&lt;div class="section" id="tutorial"&gt;
&lt;h3&gt;Tutorial&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.slideshare.net/moskytw"&gt;Mosky Liu, Pinkoi | SlideShare&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="decorator"&gt;
&lt;h2&gt;decorator&lt;/h2&gt;
&lt;p&gt;沒用 from functools import wraps 的話, function的資訊會跑掉, 重複(reentrant) 會有問題, 傳參數的話會變只有最後一個&lt;/p&gt;
&lt;p&gt;via: &lt;a class="reference external" href="http://stackoverflow.com/questions/308999/what-does-functools-wraps-do"&gt;http://stackoverflow.com/questions/308999/what-does-functools-wraps-do&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# -.- encoding: utf-8 -.-&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;functools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;wraps&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;logged&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nd"&gt;@wraps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;with_logging&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; was called&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;with_logging&lt;/span&gt;

&lt;span class="nd"&gt;@logged&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;does some math&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;  &lt;span class="c"&gt;# prints &amp;#39;f&amp;#39;, 沒wraps -&amp;gt; with_logging&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__doc__&lt;/span&gt;   &lt;span class="c"&gt;# prints &amp;#39;does some math&amp;#39; 沒wraps -&amp;gt; None&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;-----&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;logged_param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;param&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;with_logging&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c"&gt;#@wraps(func)&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;log_p&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; was called, &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;param&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;log_p&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;with_logging&lt;/span&gt;

&lt;span class="nd"&gt;@logged_param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;f2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;does some math2&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;f2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;  &lt;span class="c"&gt;# prints &amp;#39;f&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;f2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__doc__&lt;/span&gt;   &lt;span class="c"&gt;# prints &amp;#39;does some math&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;f2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nd"&gt;@logged_param&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;f3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; math3 &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;f3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;f2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="docs"></category></entry><entry><title>HTML CSS</title><link href="http://blog.suhen.org/computer/html-css.html" rel="alternate"></link><updated>2013-06-30T22:22:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-06-30:computer/html-css.html</id><summary type="html">&lt;div class="section" id="css"&gt;
&lt;h2&gt;CSS&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://learn.shayhowe.com/advanced-html-css/"&gt;http://learn.shayhowe.com/advanced-html-css/&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;border&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;solid&lt;/span&gt; &lt;span class="nt"&gt;blue&lt;/span&gt; &lt;span class="nt"&gt;10px&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;webkit&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sizing&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;moz&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sizing&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sizing&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;nice checkbox selected&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.teachparentstech.org/images/checkbox.gif"&gt;http://www.teachparentstech.org/images/checkbox.gif&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;#content .boxlabel{
color:#999;
background: url(../images/checkbox.gif) no-repeat00;
height: 28px;
padding-left: 20px;
padding-right:10px;
cursor: pointer;
}&lt;/p&gt;
&lt;p&gt;#content .boxlabel.selected{
color: rgb(32, 25, 25);
background-position:0-42px;
}&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="font"&gt;
&lt;h2&gt;Font&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;VAGRounded - &lt;a class="reference external" href="http://en.wikipedia.org/wiki/VAG_Rounded"&gt;VAG Rounded - Wikipedia, the free encyclopedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;延伸閱讀&lt;/h2&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;架構&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://channel9.msdn.com/Series/HTML5-CSS3-Fundamentals-Development-for-Absolute-Beginners"&gt;HTML5 &amp;amp; CSS3 Fundamentals: Development for Absolute Beginners | Channel 9&lt;/a&gt; 初學課程video&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://learn.shayhowe.com/advanced-html-css/"&gt;An Advanced Guide to HTML &amp;amp; CSS&lt;/a&gt; 進階架構&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.netmagazine.com/features/truth-about-structuring-html5-page"&gt;The truth about structuring an HTML5 page | Feature | .net magazine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;屬性細節&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.icoding.co/2013/06/knowledge-about-z-index-2"&gt;» 你從未瞭解過的 z-index | iCoding&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary></entry><entry><title>[computer] Emacs輸入newline符號</title><link href="http://blog.suhen.org/computer/emacs_newline.html" rel="alternate"></link><updated>2013-06-27T11:32:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-06-27:computer/emacs_newline.html</id><summary type="html">&lt;p&gt;Emacs的換行:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
C-q C-j
&lt;/pre&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;&lt;cite&gt;C-q&lt;/cite&gt;: quoted-insert, &lt;cite&gt;C-j&lt;/cite&gt;: newline&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;但是我的 &lt;cite&gt;C-q&lt;/cite&gt; 和 &lt;cite&gt;C-j&lt;/cite&gt; 為了使用dvorak layout, 改成cut &amp;amp; paste:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
(global-set-key (kbd &amp;quot;C-q&amp;quot;) 'kill-region) ; cut
(global-set-key (kbd &amp;quot;C-j&amp;quot;) 'kill-ring-save) ; paste
&lt;/pre&gt;
&lt;p&gt;因此把沒用到的 &lt;cite&gt;C-`&lt;/cite&gt; 跟 &lt;cite&gt;C-,&lt;/cite&gt; 拿來做key-translate:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
(define-key key-translation-map (kbd &amp;quot;C-q&amp;quot;) (kbd &amp;quot;C-'&amp;quot;))
(define-key key-translation-map (kbd &amp;quot;C-'&amp;quot;) (kbd &amp;quot;C-q&amp;quot;))
(define-key key-translation-map (kbd &amp;quot;C-j&amp;quot;) (kbd &amp;quot;C-,&amp;quot;))
(define-key key-translation-map (kbd &amp;quot;C-,&amp;quot;) (kbd &amp;quot;C-j&amp;quot;))
(global-set-key (kbd &amp;quot;C-'&amp;quot;) 'kill-region)
(global-set-key (kbd &amp;quot;C-,&amp;quot;) 'kill-ring-save)
&lt;/pre&gt;
&lt;p&gt;搞得很複雜... 先試用一下看看...&lt;/p&gt;
</summary><category term="emacs"></category><category term="note"></category></entry><entry><title>[computer] 善用Emacs的replace-regexp</title><link href="http://blog.suhen.org/computer/emacs_replace-regexp.rst.html" rel="alternate"></link><updated>2013-06-25T10:07:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-06-25:computer/emacs_replace-regexp.rst.html</id><summary type="html">&lt;p&gt;指令:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
M-x replace-regexp &amp;lt;RET&amp;gt; regexp &amp;lt;RET&amp;gt; newstring &amp;lt;RET&amp;gt;
&lt;/pre&gt;
&lt;p&gt;特殊字&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;\&amp;amp;’&lt;/tt&gt; 完整的匹配字&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;\d&lt;/tt&gt; d是數字, 表示匹配在第幾個group (back reference)&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;\#&lt;/tt&gt; 累加, 發生第幾次,第一次從0開始&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;\,&lt;/tt&gt; Lisp expression&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;\?&lt;/tt&gt; 詢問&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;範例&lt;/h2&gt;
&lt;p&gt;數字編號:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
1987:Bogotá
5243:Fabergé

\(.+:\)
\#.

0.Bogotá
1.Fabergé

如果要從1開始:
\,(1+ \#).
&lt;/pre&gt;
&lt;p&gt;HTML H降級:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;lt;h1&amp;gt;silly&amp;lt;/h1&amp;gt;
&amp;lt;h2&amp;gt;walk&amp;lt;/h2&amp;gt;

&amp;lt;\(/?\)h\([0-9]\)&amp;gt;
&amp;lt;\1h\,(1+ \#2)&amp;gt;

&amp;lt;h2&amp;gt;silly&amp;lt;/h2&amp;gt;
&amp;lt;h3&amp;gt;walk&amp;lt;/h3&amp;gt;
&lt;/pre&gt;
&lt;p&gt;HTML link換成rst格式:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;lt;a href=\&amp;quot;\(.+\)\&amp;quot;\(.*\)&amp;gt;\(.+\)&amp;lt;/a&amp;gt;
-&amp;gt;
`\3 &amp;lt;\1&amp;gt;`__
&lt;/pre&gt;
&lt;p&gt;(BUG)&lt;/p&gt;
&lt;p&gt;Flickr share link to rst:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;lt;a href=\&amp;quot;\(.+\)\&amp;quot; \(.+\)&amp;gt;&amp;lt;img src=\&amp;quot;\(.+\).jpg\&amp;quot; \(.+\) alt=\&amp;quot;\(.+\)\&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
-&amp;gt;
\5 | `flickr &amp;lt;\1&amp;gt;`__

.. image:: \3.jpg
&lt;/pre&gt;
&lt;p&gt;(BUG)&lt;/p&gt;
&lt;p&gt;參考&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.gnu.org/software/emacs/manual/html_node/emacs/Regexp-Replace.html"&gt;Regexp Replace - GNU Emacs Manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.emacswiki.org/emacs/ReplaceRegexp"&gt;EmacsWiki: Replace Regexp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="note"></category><category term="emacs"></category></entry><entry><title>[Computer] 用Emacs dired-mode批次改檔名</title><link href="http://blog.suhen.org/computer/emacs_dired_rename.html" rel="alternate"></link><updated>2013-06-17T14:55:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-06-17:computer/emacs_dired_rename.html</id><summary type="html">&lt;p&gt;看到 &lt;a class="reference external" href="http://xahlee.org"&gt;XahLee&lt;/a&gt; 的一篇文章: &lt;a class="reference external" href="http://ergoemacs.org/emacs/rename_file_pattern.html"&gt;Emacs: Rename Files Interactively by Pattern (regex; wdired)&lt;/a&gt; ，用Emacs來處理批次改檔名實在太方便了。&lt;/p&gt;
&lt;p&gt;在Dired模式下，&lt;strong&gt;C-x C-q&lt;/strong&gt; 進入修改模式，或是執行 &lt;strong&gt;wdired-change-to-wdired-mode&lt;/strong&gt;, 這時改檔名就像改一般文字檔一樣，可以用 &lt;em&gt;query-replace&lt;/em&gt;, &lt;em&gt;query-replace-regexp&lt;/em&gt; 或 &lt;em&gt;cua-mode&lt;/em&gt; , 改完後 &lt;strong&gt;C-c C-c&lt;/strong&gt; 送出, 或是 &lt;strong&gt;C-c C-Esc&lt;/strong&gt; 取消就可以了,  比寫script直覺多了。&lt;/p&gt;
</summary><category term="emacs"></category><category term="note"></category></entry><entry><title>用screen+irssi上IRC聊天不斷線</title><link href="http://blog.suhen.org/computer/irc_screen_irssi.html" rel="alternate"></link><updated>2013-05-26T15:21:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-05-26:computer/irc_screen_irssi.html</id><summary type="html">&lt;p&gt;一直沒有很常使用IRC, 發現可以用screen detach/reattach的功能, 遠端機器開Irssi這個console介面的IRC client, 掛在IRC上, 就算本機突然沒網路, 回來重新連上screen, 還是可以接上回討論. 就像從沒離開過 (遠端真的從來沒有離開).&lt;/p&gt;
&lt;p&gt;安裝screen和irssi:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
aptitude install screen
aptitude install irssi
&lt;/pre&gt;
&lt;p&gt;開screen (detach/reattach參數):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
screen -RD
&lt;/pre&gt;
&lt;p&gt;進入irssi:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
/connect irc.freenode.net # 連server
/nick moogoolee           # 改匿名
/j #python.tw             # 開channel
/wc                       # 離開channal
/disconnect               # server斷線
/quit                     # 離開irssi
&lt;/pre&gt;
&lt;p&gt;切換channel:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
alt + 數字
&lt;/pre&gt;
&lt;p&gt;但是Mac的Alt會變成輸入特殊字, 用iTerm的話, 可以如以下設定:&lt;/p&gt;
&lt;p&gt;Bookmarks -&amp;gt; Manage Profiles -&amp;gt; Keyboard Profiles -&amp;gt; Global, 點選&amp;quot;Option Key as +Esc&amp;quot;&lt;/p&gt;
&lt;p&gt;參考連結: &lt;a class="reference external" href="http://lzy-blah.blogspot.tw/2007/08/screen-irssi-irc-q.html"&gt;lzy's 543: 用 screen + irssi 上 irc 之鄉民版教學 (含Q&amp;amp;A)&lt;/a&gt;&lt;/p&gt;
</summary><category term="note"></category></entry><entry><title>Database筆記 (MySQL, SQLite)</title><link href="http://blog.suhen.org/computer/database_docs.html" rel="alternate"></link><updated>2013-05-09T18:23:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-05-09:computer/database_docs.html</id><summary type="html">&lt;div class="section" id="mysql"&gt;
&lt;h2&gt;MySql&lt;/h2&gt;
&lt;p&gt;Syntax&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;ALL&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="k"&gt;DISTINCT&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;DISTINCTROW&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;HIGH_PRIORITY&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;STRAIGHT_JOIN&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;SQL_SMALL_RESULT&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;SQL_BIG_RESULT&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;SQL_BUFFER_RESULT&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;SQL_CACHE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;SQL_NO_CACHE&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;SQL_CALC_FOUND_ROWS&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;select_expr&lt;/span&gt; &lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="n"&gt;select_expr&lt;/span&gt; &lt;span class="p"&gt;...]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;table_references&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;where_condition&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;GROUP&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;col_name&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;expr&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;ASC&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;WITH&lt;/span&gt; &lt;span class="k"&gt;ROLLUP&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;HAVING&lt;/span&gt; &lt;span class="n"&gt;where_condition&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;col_name&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;expr&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="k"&gt;position&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;ASC&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;...]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt; &lt;span class="k"&gt;row_count&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="k"&gt;row_count&lt;/span&gt; &lt;span class="k"&gt;OFFSET&lt;/span&gt; &lt;span class="k"&gt;offset&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;PROCEDURE&lt;/span&gt; &lt;span class="n"&gt;procedure_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argument_list&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;MySQL的JOIN預設是 &lt;tt class="docutils literal"&gt;INNER JOIN&lt;/tt&gt; ，另一種是LEFT OUTER JOIN，通常用 &lt;tt class="docutils literal"&gt;LEFT JOIN&lt;/tt&gt; 就可以了。MySQL會優先處理JOIN，然後才是WHERE。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="cookbook"&gt;
&lt;h3&gt;cookbook&lt;/h3&gt;
&lt;p&gt;CURD:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
INSERT INTO tbl_name (col1,col2) VALUES(15,col1*2);
INSERT INTO tbl_name (a,b,c) VALUES(1,2,3),(4,5,6),(7,8,9);
UPDATE user SET password=password('新密碼') where user='root';
&lt;/pre&gt;
&lt;p&gt;以中文筆畫排序:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
CONVERT( 欄位名稱 using big5) 。
&lt;/pre&gt;
&lt;p&gt;LIMIT&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="k"&gt;OFFSET&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt; &lt;span class="c1"&gt;-- 從40個以後抓20個&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="c1"&gt;-- 同上&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看database容量:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;table_schema&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;database_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="k"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;data_length&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;index_length&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;Data Base Size in MB&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="k"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;data_free&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;Free Space in MB&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;information_schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TABLES&lt;/span&gt;
&lt;span class="k"&gt;GROUP&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;table_schema&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="function"&gt;
&lt;h3&gt;function&lt;/h3&gt;
&lt;p&gt;時間&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;NOW&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="n"&gt;CURDATE&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="n"&gt;CURTIME&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;MONTH&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FROM_UNIXTIME&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;add_date&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="k"&gt;month&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;NOW&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;NOW&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;INTERVAL&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;DAY&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="err"&gt;今天跟昨天&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ref: &lt;a class="reference external" href="http://dev.mysql.com/doc/refman/5.5/en/date-and-time-functions.html"&gt;http://dev.mysql.com/doc/refman/5.5/en/date-and-time-functions.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="schema"&gt;
&lt;h3&gt;Schema&lt;/h3&gt;
&lt;div class="section" id="id1"&gt;
&lt;h4&gt;原則&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;小的好&lt;/li&gt;
&lt;li&gt;簡單的好, 如integers比characters好, 不用判斷collations&lt;/li&gt;
&lt;li&gt;不要用 &lt;strong&gt;NULL&lt;/strong&gt;, 影響效能, 可以用 &lt;tt class="docutils literal"&gt;0&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;空字串&lt;/tt&gt;或 &lt;tt class="docutils literal"&gt;N&lt;/tt&gt;等值來代替&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h4&gt;整數&lt;/h4&gt;
&lt;p&gt;資料儲存上 &lt;tt class="docutils literal"&gt;TINYINT&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;SMALLINT&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;MEDIUMINT&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;INT&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;BIGINT&lt;/tt&gt;各使用了8, 16, 26, 32, 64 bits, 數值範圍-2^(N-1)到2(N-1)-1, 加了 &lt;tt class="docutils literal"&gt;UNSIGNED&lt;/tt&gt;後, 範圍從0到2^N-1. 但是MySQL在 &lt;strong&gt;計算&lt;/strong&gt;上是用64-bit的BIGINT來算, 就算是32-bit的系統&lt;/p&gt;
&lt;p&gt;MySQL使用的整數長度, 如INT(11), 並不會真的有儲存限制, 只是為了command-line client的顯示, 在儲存和計算上INT(1)和INT(20)是一樣的.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h4&gt;實數&lt;/h4&gt;
&lt;p&gt;浮點數可以用 &lt;tt class="docutils literal"&gt;FLOAT&lt;/tt&gt; (4 bytes), &lt;tt class="docutils literal"&gt;DOUBLE&lt;/tt&gt; (8 bytes), &lt;tt class="docutils literal"&gt;DECIMAL&lt;/tt&gt; 等格式, MySQL在浮點數的計算上都是用DOUBLE, 資料儲存上以DECIMAL為佳&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="varcharchar"&gt;
&lt;h4&gt;VARCHAR和CHAR&lt;/h4&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;VARCHAR&lt;/tt&gt;是可變長度, 會用1到2byte存字串長度(MyISAM或InnoDB), &lt;tt class="docutils literal"&gt;CHAR&lt;/tt&gt;是固字長度, 用來存Y/N, MD5值等.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h4&gt;時間&lt;/h4&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;DATETIME&lt;/tt&gt; 以YYYYMMDDHHMMSS的格式儲存, 範圍從1001到9999年, 8 bytes&lt;/p&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;TIMESTAMP&lt;/tt&gt; 以Unix timestamp格式, 範圍從1970到2038 (格林威治標準時間)&lt;/p&gt;
&lt;p&gt;選擇用TIMESTAMP比較節省空間, 但不要把unix timestamp存在整數格式, 因為沒有什麼好處, 也很難判讀&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h4&gt;其他&lt;/h4&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;BLOB&lt;/tt&gt;和 &lt;tt class="docutils literal"&gt;TEXT&lt;/tt&gt;不同的是TEXT會有character set和collation, BLOB沒有&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;最佳化&lt;/h3&gt;
&lt;p&gt;所有資料表最佳化:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mysqlcheck -a -c -o -r --all-databases -uroot -p
&lt;/pre&gt;
&lt;p&gt;a: analyze, c: check, o: optimize, r: repair&lt;/p&gt;
&lt;p&gt;重建索引:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
myisamchk -s /var/lib/mysql/*/*.MYI
&lt;/pre&gt;
&lt;p&gt;s: silent mode (output only errors)&lt;/p&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;mysql要先停&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="tools"&gt;
&lt;h3&gt;Tools&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="http://hackmysql.com/mysqlreportdoc"&gt;mysqlreport Documentation&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mysqlreport  --user MY_USER --password MY_PASS
&lt;/pre&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;Read Hit: 從硬碟/記憶體讀取key的比率, 最好不要低於99%, 太低的話, 檢查Key Report, 調高key buffer&lt;/p&gt;
&lt;/div&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;Slow: 要低於0.05&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a class="reference external" href="http://hackmysql.com/mysqlreportguide"&gt;The Guide To Understanding mysqlreport&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.day32.com/MySQL/"&gt;Sundry MySQL Scripts and Docs&lt;/a&gt; 很棒的MySQL tuning scripts&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/rackerhacker/MySQLTuner-perl"&gt;rackerhacker/MySQLTuner-perl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://hackmysql.com/mysqlsla"&gt;mysqlsla :: Parse, filter and sort MySQL slow, general and binary logs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;常用處理&lt;/h3&gt;
&lt;p&gt;改root密碼:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mysqladmin -u root -p'oldpassword' password newpass
&lt;/pre&gt;
&lt;p&gt;via: &lt;a class="reference external" href="http://www.cyberciti.biz/faq/mysql-change-root-password/"&gt;MySQL Change root Password&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="root"&gt;
&lt;h4&gt;忘記root密碼&lt;/h4&gt;
&lt;p&gt;1.先關掉mysql server:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo /etc/init.d/mysql stop
&lt;/pre&gt;
&lt;p&gt;2.開server, 但忽略grant-tables (存密碼的地方):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mysqld_safe --user=mysql --skip-grant-tables --skip-networking &amp;amp;
&lt;/pre&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;mysqld_safe就是用更安全的方式開啟(重載)mysqld, 如有錯誤發生時會重開, 寫log.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;3.用root進入sql改密碼:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mysql -u root mysql
&amp;gt; UPDATE user SET Password=PASSWORD('123456') WHERE User='root';
&amp;gt; FLUSH PRIVILEGES;
&amp;gt; exit
&lt;/pre&gt;
&lt;p&gt;或是把上面sql語法存在foo.txt裡, 用:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mysqld_safe --init-file=/pathto/foo.txt &amp;amp;
&lt;/pre&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;flush privileges; 重載授權表&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;參考&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://wiki.joyent.com/display/smart/Resetting+the+MySQL+Root+Password"&gt;Resetting the MySQL Root Password - SmartMachines - Joyent Customer Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h4&gt;連接外部資料庫&lt;/h4&gt;
&lt;p&gt;1.改my.cnf(通常在/etc下):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# skip-networking 此行註解掉
bind-address = 11.22.33.44 # 加上要連過來的ip
&lt;/pre&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;OpenSolaris的my.cnf好像在加在/var/mysql才會有作用&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;2.重開mysql&lt;/p&gt;
&lt;p&gt;3.連線進入:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mysql -u root –p mysql
mysql&amp;gt; CREATE DATABASE foo;
mysql&amp;gt; GRANT ALL ON foo.* TO bar&amp;#64;'11.22.33.44' IDENTIFIED BY '密碼';

mysql&amp;gt; update db set Host='11.22.33.44' where Db='資料庫名稱';
mysql&amp;gt; update user set Host='11.22.33.44' where user='使用者名稱';
&lt;/pre&gt;
&lt;p&gt;4.重開mysql&lt;/p&gt;
&lt;p&gt;5.測試能不能連:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mysql -h 主機 -u root -p
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h4&gt;資料庫編碼&lt;/h4&gt;
&lt;p&gt;列出MySQL各種編碼變數:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
show variables like &amp;quot;character%&amp;quot;;
&lt;/pre&gt;
&lt;p&gt;php的 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;mysql_query(&amp;quot;SET&lt;/span&gt; NAMES &lt;span class="pre"&gt;UTF8&amp;quot;);&lt;/span&gt;&lt;/tt&gt; 相當於MySQL:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
SET character_set_client = utf8;
SET character_set_results = utf8;
SET character_set_connection = utf8;
&lt;/pre&gt;
&lt;p&gt;編碼順序: &lt;strong&gt;client -&amp;gt; connect -&amp;gt; server -&amp;gt; connect -&amp;gt; client&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h4&gt;亂碼處理&lt;/h4&gt;
&lt;p&gt;原本是latin1(ISO 8859-1)編碼, 要改成utf-8:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;mysqldump -uroot -p mydb --default-character-set=latin1 &amp;gt; old.sql&lt;/li&gt;
&lt;li&gt;piconv -f utf8 -t utf8 old.sql&amp;gt; new.sql&lt;/li&gt;
&lt;li&gt;打開new.sql裡面加 &lt;tt class="docutils literal"&gt;SET NAMES utf8&lt;/tt&gt;;&lt;/li&gt;
&lt;li&gt;mysql -uroot -pmypassword -Dmydb_new --default-character-set=utf8 &amp;lt; new.sql&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="command"&gt;
&lt;h3&gt;command&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;mysql&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;uUSER&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pPASS&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;DROP DATABASE foo; CREATE DATABASE bar COLLATE &amp;#39;utf8_general_ci&amp;#39;;&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="n"&gt;DATABASES&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="n"&gt;TABLES&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;USE&lt;/span&gt; &lt;span class="n"&gt;db_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;TRUNCATE&lt;/span&gt; &lt;span class="n"&gt;tbl_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;DATABASE&lt;/span&gt; &lt;span class="n"&gt;db_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;tbl_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;STATUS&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="err"&gt;看&lt;/span&gt;&lt;span class="k"&gt;collation&lt;/span&gt;
&lt;span class="k"&gt;DESCRIBE&lt;/span&gt; &lt;span class="n"&gt;tbl_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="err"&gt;看&lt;/span&gt;&lt;span class="k"&gt;table&lt;/span&gt;&lt;span class="err"&gt;屬性&lt;/span&gt;
&lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="k"&gt;FULL&lt;/span&gt; &lt;span class="n"&gt;COLUMNS&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;tbl_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="k"&gt;table&lt;/span&gt; &lt;span class="err"&gt;細節&lt;/span&gt;
&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;tablename&lt;/span&gt; &lt;span class="k"&gt;CONVERT&lt;/span&gt; &lt;span class="k"&gt;TO&lt;/span&gt; &lt;span class="nb"&gt;CHARACTER&lt;/span&gt; &lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;utf8&lt;/span&gt; &lt;span class="k"&gt;COLLATE&lt;/span&gt; &lt;span class="n"&gt;utf8_general_ci&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="err"&gt;改欄位編碼&lt;/span&gt;

&lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="k"&gt;GLOBAL&lt;/span&gt; &lt;span class="n"&gt;VARIABLES&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="server-management"&gt;
&lt;h3&gt;Server Management&lt;/h3&gt;
&lt;p&gt;安裝, 以Debian為例:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# 清除
sudo apt-get --purge remove mysql-server mysql-common mysql-client
# 安裝
sudo apt-get install mysql-server mysql-common mysql-client php5-mysql
# 第一次設定admin密碼
mysqladmin -u root password your-new-password
# 啟動
sudo /etc/init.d/mysql restart
# data位置
# /var/lib/mysql
&lt;/pre&gt;
&lt;div class="section" id="mac-os-x"&gt;
&lt;h4&gt;Mac OS X&lt;/h4&gt;
&lt;p&gt;從MySql(&lt;a class="reference external" href="http://dev.mysql.com/downloads/mysql/"&gt;http://dev.mysql.com/downloads/mysql/&lt;/a&gt;) 找適何的package，裝完後:&lt;/p&gt;
&lt;p&gt;binary:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
/usr/local/mysql/bin/mysql
&lt;/pre&gt;
&lt;p&gt;path:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
export PATH=/usr/local/mysql/bin:$PATH
sudo ln -s /usr/local/mysql/lib/libmysqlclient.18.dylib /usr/lib/libmysqlclient.18.dylib
&lt;/pre&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;原本沒有 /etc/my.cnf, 可以從 /usr/local/mysql/support-files/ 找一個官方範本來改&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="import-export"&gt;
&lt;h4&gt;Import / Export&lt;/h4&gt;
&lt;p&gt;倒整個資料庫:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ mysqldump ---u myuser -p myuser_db &amp;gt; myuser_db.sql
$ mysqldump --skip-lock-tables -umysuer -ppassword --database mydb &amp;gt; backup.sql
&lt;/pre&gt;
&lt;p&gt;倒一個資料表:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ mysqldump -u myuser -p myuser_db sometable &amp;gt; myuser_db_sometable.sql
&lt;/pre&gt;
&lt;p&gt;到多個叫foo_開頭的資料表到同一個檔案:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mysql databasename -u [root] -p[password] -e 'show tables like &amp;quot;foo_%&amp;quot;' | grep -v Tables_in | xargs mysqldump [databasename] -u [root] -p[password] &amp;gt; [target_file]
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;import&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;方法1:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
直接import
$ mysql  -uname -p dbname  --default-character-set=utf8  &amp;lt;  XXX.sql
&lt;/pre&gt;
&lt;p&gt;方法2:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
先登入mysql shell介面
$ mysql -u myuser -p
$ use myuser_db; #select db
$ \. myuser_db_sometable.sql
$ \q
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="configuration"&gt;
&lt;h3&gt;Configuration&lt;/h3&gt;
&lt;p&gt;my.cnf選用(/usr/share/mysql/下)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;my-small.cnf(小於64MB的記憶體)&lt;/li&gt;
&lt;li&gt;my-medium.cnf (64~128MB的記憶體)&lt;/li&gt;
&lt;li&gt;my-large.cnf (128~512MB的記憶體)&lt;/li&gt;
&lt;li&gt;my-huge.cnf (1~2GB的記憶體)&lt;/li&gt;
&lt;li&gt;my-innodb-heavy-4G.cnf (4GB的記憶體)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;找my.cnf:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mysql --verbose --help | grep -A 1 'Default options'
# CentOS: /etc/my.cnf ~/.my.cnf
&lt;/pre&gt;
&lt;p&gt;my.cnf:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
[mysqld]
set-variable=max_connections=250
default-storage-engine=InnoDB # 預設選用InnoDB

# slow query
log-slow-queries=/tmp/slow-query.log #
long_query_time = 3 #query超過2秒時，則會記錄
log-queries-not-using-indexes

# optimize
query_cache_size # 大量相同的query時, 很有用
key_buffer_size # 越大query越快, 但最好設定1/4, 不要超過一半的系統記憶體 (看*.MYI的size多大, 就設多大)
&lt;/pre&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;MySQL安裝時不一定會產生&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="q-a"&gt;
&lt;h3&gt;Q &amp;amp; A&lt;/h3&gt;
&lt;p&gt;error: MySQL server has gone away:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
; my.cnf
max_allowed_packet = 1M ; 超過SQL設定最大長度, 改大一點
; or 連線逾時
wait_timeout
interactive_timeout
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="others"&gt;
&lt;h3&gt;others&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://antbsd.twbbs.org/~ant/wordpress/?p=2259"&gt;探討 MySQL 授權 | Ant's ATField&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="sqlite"&gt;
&lt;h2&gt;Sqlite&lt;/h2&gt;
&lt;p&gt;常用指令&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sqlite3 new.db # create db
$ sqlite3 myprecious.db &amp;quot;.dump&amp;quot; ＞ output.sql # dump sql
$ sqlite3 new.db ＜ output.sql # import
# or
$ cat dumpfile.sql | sqlite3 new.db
&lt;/pre&gt;
&lt;p&gt;進入sqlite3後:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
.tables  # MySQL的show tables
.schema TABLENAME
.help
&lt;/pre&gt;
&lt;p&gt;ref&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.sqlite.org/sqlite.html"&gt;Command Line Shell For SQLite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- Comment
Engine
- [[http://blog.roga.tw/2008/11/19/1288][MySQL 資料庫儲存引擎的選用]]
- [[http://miggo.pixnet.net/blog/post/30855147][MySQL各Engine Type(MyISAM / InnoDB / Memory) 的特性說明]]
- [[http://www.student.tw/db/showthread.php?t=174156][【問題】Mysql 中的 MyIsam 與 InnoDB 之差異 - 深藍學生論壇]]
** type
- [[http://www.systn.com/data/articles/304_tw.html][mysql中char與varchar的區別]] --&gt;
&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h2&gt;不同處&lt;/h2&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name" /&gt;
&lt;col class="field-body" /&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;MySQL:&lt;/th&gt;&lt;td class="field-body"&gt;RAND()&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;Sqlite:&lt;/th&gt;&lt;td class="field-body"&gt;RANDOM()&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;MySQL有ROW_NUMBER(), Sqlite沒有, 只能用SQL語法的奇技淫巧來達成.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="snippets"&gt;
&lt;h2&gt;snippets&lt;/h2&gt;
&lt;p&gt;單字表沒有照abc排, 要照字母順序排序(num)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;en_word&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="k"&gt;LOWER&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="k"&gt;LOWER&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;NUM&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;en_word&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="k"&gt;LOWER&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;一個裝置, 安裝了2個app以上的數量統計&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="k"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;num_of_apps&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="k"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;did&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;log_user_data&lt;/span&gt; &lt;span class="k"&gt;group&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;did&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;order&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="k"&gt;desc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;group&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="k"&gt;desc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="docs"></category><category term="mysql"></category><category term="sqlite"></category></entry><entry><title>Emacs 小抄</title><link href="http://blog.suhen.org/computer/emacs.html" rel="alternate"></link><updated>2013-04-26T18:37:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-04-26:computer/emacs.html</id><summary type="html">&lt;div class="section" id="tips"&gt;
&lt;h2&gt;Tips&lt;/h2&gt;
&lt;p&gt;自動補齊:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
M-/
&lt;/pre&gt;
&lt;p&gt;變數對齊:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
M-x align-regexp
&lt;/pre&gt;
&lt;p&gt;輸入 &lt;tt class="docutils literal"&gt;=&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;列出全部字串:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
M-x occur
&lt;/pre&gt;
&lt;p&gt;刪除整行(vim's dd):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
C-S-Backspace
&lt;/pre&gt;
&lt;p&gt;刪除空白行:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
M-x flush-lines RET ^$ RET ;純空白行
M-x flush-lines RET ^\s-*$ RET ; 有空白的空白行
&lt;/pre&gt;
&lt;p&gt;編輯每行文字:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
;; 把每行的文字foo加indent和quote 'foo' =&amp;gt;'  &amp;quot;foo&amp;quot;'
M-x replace-regexp RET ^ RET SPACE SPACE&amp;quot; RET ;; 開頭加3個空白和&amp;quot;
M-x replace-regexp RET $ RET &amp;quot;, RET ;; 結尾加&amp;quot;
&lt;/pre&gt;
&lt;p&gt;每行加2空白:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
M-x cua-mode
選好區塊
C-RET
移到第一行
按2個空白
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;參考&lt;/strong&gt;
&lt;a class="reference external" href="http://stackoverflow.com/questions/60367/the-single-most-useful-emacs-feature"&gt;polls - The single most useful Emacs feature - Stack Overflow&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="basic"&gt;
&lt;h2&gt;Basic&lt;/h2&gt;
&lt;div class="section" id="movement"&gt;
&lt;h3&gt;移動 Movement&lt;/h3&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="18%" /&gt;
&lt;col width="82%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;M-&amp;lt;&lt;/td&gt;
&lt;td&gt;beginning-of-buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;M-&amp;gt;&lt;/td&gt;
&lt;td&gt;end-of-buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-M-V&lt;/td&gt;
&lt;td&gt;other window page down&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-M-S-V&lt;/td&gt;
&lt;td&gt;other window page up&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;search: M-c 切換case-sensitivity&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="editing"&gt;
&lt;h3&gt;編輯 Editing&lt;/h3&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="40%" /&gt;
&lt;col width="60%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;M-x string-replace&lt;/td&gt;
&lt;td&gt;replace&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;M-x query-replace&lt;/td&gt;
&lt;td&gt;confirm (M-%)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;M-x replace-regexp&lt;/td&gt;
&lt;td&gt;replace with regex&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-t&lt;/td&gt;
&lt;td&gt;對調兩字元&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;M-t&lt;/td&gt;
&lt;td&gt;對調兩word&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-x C-t&lt;/td&gt;
&lt;td&gt;對調兩行, 跟游標上一行對調&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;M-c&lt;/td&gt;
&lt;td&gt;單字的第一個字大寫&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;M-u&lt;/td&gt;
&lt;td&gt;單字改大寫&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;M-l&lt;/td&gt;
&lt;td&gt;單字改小寫&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-S-Backspace&lt;/td&gt;
&lt;td&gt;刪除整行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;M-&lt;/td&gt;
&lt;td&gt;刪除游標前後全部空白, tab&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="section" id="register-and-bookmark"&gt;
&lt;h4&gt;Register and Bookmark&lt;/h4&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="15%" /&gt;
&lt;col width="85%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;C-x r SPACE&lt;/td&gt;
&lt;td&gt;設定register, 出現Point to register後輸入一字元&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-x r j&lt;/td&gt;
&lt;td&gt;移動到register, 出現Jump to register後輸入一字元&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-x r s a&lt;/td&gt;
&lt;td&gt;copy-to-register, 把region內的文字copy到register a&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-x r i a&lt;/td&gt;
&lt;td&gt;insert-register, insert register a&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-x r w a&lt;/td&gt;
&lt;td&gt;把window的狀態存起來, window-configuration-to-register, C-x r j叫出來&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-x r f a&lt;/td&gt;
&lt;td&gt;frame-configuration-to-register&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-x r m&lt;/td&gt;
&lt;td&gt;設定bookmark, bookmark會永久存起來(~/.emacs.bmk), register不會&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-x r b&lt;/td&gt;
&lt;td&gt;goto bookmark&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-x r l&lt;/td&gt;
&lt;td&gt;list bookmark&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;其他:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;M-x bookmark-delete &amp;lt;RET&amp;gt; bookmark名字 &amp;lt;RET&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="coding"&gt;
&lt;h3&gt;Coding&lt;/h3&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="52%" /&gt;
&lt;col width="48%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;C-h C &amp;lt;RET&amp;gt;&lt;/td&gt;
&lt;td&gt;看目前coding&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;M-x list-coding-systems&lt;/td&gt;
&lt;td&gt;列出所有coding system&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-x &amp;lt;RET&amp;gt; r coding &amp;lt;RET&amp;gt;&lt;/td&gt;
&lt;td&gt;選coding system重新讀檔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-x &amp;lt;RET&amp;gt; f coding &amp;lt;RET&amp;gt;&lt;/td&gt;
&lt;td&gt;coding system存檔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-x &amp;lt;RET&amp;gt; c coding &amp;lt;RET&amp;gt;&lt;/td&gt;
&lt;td&gt;coding system buffer?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-u C-x =&lt;/td&gt;
&lt;td&gt;詳細coding system&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-x &amp;lt;RET&amp;gt; c raw-text &amp;lt;RET&amp;gt;&lt;/td&gt;
&lt;td&gt;load unibyte&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;特殊符號&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;C-q C-j 換行符號, Windows編輯器的^M: M-x replace-string [ENTER] C-q C-m [ENTER] n [ENTER]&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="help"&gt;
&lt;h3&gt;Help&lt;/h3&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="25%" /&gt;
&lt;col width="75%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;C-h ?&lt;/td&gt;
&lt;td&gt;help的help, SPACE和Backspace上下移動&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-h v&lt;/td&gt;
&lt;td&gt;M-x describe-variable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-h f&lt;/td&gt;
&lt;td&gt;M-x describe-function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-h m&lt;/td&gt;
&lt;td&gt;M-x describe-mode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-h k KEYS&lt;/td&gt;
&lt;td&gt;M-x describe-key KEYS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-h c KEYS&lt;/td&gt;
&lt;td&gt;M-x describe-key-briefly&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-h b&lt;/td&gt;
&lt;td&gt;M-x describe-bindings&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="modes"&gt;
&lt;h2&gt;Modes&lt;/h2&gt;
&lt;div class="section" id="dired"&gt;
&lt;h3&gt;Dired&lt;/h3&gt;
&lt;p&gt;M-x dired&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="9%" /&gt;
&lt;col width="91%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;^&lt;/td&gt;
&lt;td&gt;回上目錄&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;j&lt;/td&gt;
&lt;td&gt;jump 移動游標&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;標示&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;u&lt;/td&gt;
&lt;td&gt;取消標示&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;f&lt;/td&gt;
&lt;td&gt;(like C-x C-f 開檔)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;RET&lt;/td&gt;
&lt;td&gt;同上&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;o&lt;/td&gt;
&lt;td&gt;開檔, but開在另一window&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;a&lt;/td&gt;
&lt;td&gt;開檔, 但是不會新開一個buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;copy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;R&lt;/td&gt;
&lt;td&gt;rename, 可以當&amp;quot;mv&amp;quot;用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;d&lt;/td&gt;
&lt;td&gt;標示delete&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;執行delete&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;create dir&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;M&lt;/td&gt;
&lt;td&gt;chmod&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;O&lt;/td&gt;
&lt;td&gt;chown&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;G&lt;/td&gt;
&lt;td&gt;chgrp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;g&lt;/td&gt;
&lt;td&gt;refresh&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="section" id="id2"&gt;
&lt;h4&gt;批次改檔名&lt;/h4&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="26%" /&gt;
&lt;col width="74%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;C-x C-q&lt;/td&gt;
&lt;td&gt;wdired-change-to-wdired-mode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-c C-c&lt;/td&gt;
&lt;td&gt;wdired-finish-edit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-c C-Esc&lt;/td&gt;
&lt;td&gt;wdired-abort-changes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;C-x C-q (23.1以後)&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;ref: &lt;a class="reference external" href="http://ergoemacs.org/emacs/rename_file_pattern.html"&gt;Emacs: Rename Files Interactively by Pattern (regex; wdired)&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="org-mode"&gt;
&lt;h3&gt;Org-mode&lt;/h3&gt;
&lt;p&gt;預設開啟狀態:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
#+STARTUP: overview
#+STARTUP: content
#+STARTUP: showall
#+STARTUP: showeverything

#+STARTUP: hideblocks
#+STARTUP: nohideblock
&lt;/pre&gt;
&lt;div class="section" id="id3"&gt;
&lt;h4&gt;移動&lt;/h4&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="27%" /&gt;
&lt;col width="73%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;C-c C-n/p&lt;/td&gt;
&lt;td&gt;下/上一個outline&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-c C-f/b&lt;/td&gt;
&lt;td&gt;下/上一個outline (同lever)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-c C-u&lt;/td&gt;
&lt;td&gt;上一層&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="agenda"&gt;
&lt;h4&gt;Agenda&lt;/h4&gt;
&lt;p&gt;C-c C-x C-s archive
C-c [ 把檔案加入agenda&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="calc"&gt;
&lt;h3&gt;Calc&lt;/h3&gt;
&lt;p&gt;M-x calc&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="36%" /&gt;
&lt;col width="64%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;q, C-x * c&lt;/td&gt;
&lt;td&gt;離開&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-x * k&lt;/td&gt;
&lt;td&gt;keypad (數字)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;M-x quick-calc&lt;/td&gt;
&lt;td&gt;在minibuffer直接做簡單計算&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Radix-Modes:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
d 0, d 2, d 8 ; 10, 2, 8進位
d r ;然後按2到36選進位數
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.gnu.org/software/emacs/manual/html_mono/calc.html"&gt;GNU Emacs Calc Manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.emacswiki.org/emacs/AdvancedDeskCalculator"&gt;EmacsWiki: Advanced Desk Calculator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="html"&gt;
&lt;h3&gt;HTML&lt;/h3&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="16%" /&gt;
&lt;col width="84%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;C-c C-t&lt;/td&gt;
&lt;td&gt;加tag, 然後照指示加attribute: property, value.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-c C-v&lt;/td&gt;
&lt;td&gt;開browser看&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-c C-f&lt;/td&gt;
&lt;td&gt;移到下個匹配tag&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-c C-b&lt;/td&gt;
&lt;td&gt;移到上個匹配tag&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-c Tab&lt;/td&gt;
&lt;td&gt;隱藏HTML tag, 再打一次C-c Tab就顯示回來&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-c  /&lt;/td&gt;
&lt;td&gt;加入結尾tag&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-c C-a&lt;/td&gt;
&lt;td&gt;在HTML tag裡加attribute&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-c C-d&lt;/td&gt;
&lt;td&gt;刪除HTML tag開頭和結尾都會一起刪&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-c RET&lt;/td&gt;
&lt;td&gt;插入&amp;lt;p&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-c j&lt;/td&gt;
&lt;td&gt;插入&amp;lt;br&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-c C-n&lt;/td&gt;
&lt;td&gt;插入特殊字元, 像空白&amp;amp;nbsp;, 小於&amp;amp;lt;, 大於&amp;amp;gt;...&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-c C-c h&lt;/td&gt;
&lt;td&gt;插入&amp;lt;a href=...&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-c C-c u&lt;/td&gt;
&lt;td&gt;插入&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;...&amp;lt;/ul&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-c C-c o&lt;/td&gt;
&lt;td&gt;插入&amp;lt;ol&amp;gt;&amp;lt;li&amp;gt;...&amp;lt;/ol&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-c C-c c&lt;/td&gt;
&lt;td&gt;插入checkbox&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-c C-c r&lt;/td&gt;
&lt;td&gt;插入radio&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-c C-h&lt;/td&gt;
&lt;td&gt;看說明&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="graphviz-dot"&gt;
&lt;h3&gt;Graphviz (dot)&lt;/h3&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="16%" /&gt;
&lt;col width="84%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;C-c c&lt;/td&gt;
&lt;td&gt;compile dot ($ dot -Tpng foo.dot &amp;gt; foo.png)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-c p&lt;/td&gt;
&lt;td&gt;display png&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a class="reference external" href="http://users.skynet.be/ppareit/projects/graphviz-dot-mode/graphviz-dot-mode.html"&gt;Graphviz dot mode for emacs&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="others-mode"&gt;
&lt;h3&gt;Others Mode&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;M-x artist-mode&lt;/li&gt;
&lt;li&gt;M-x toggle-debug-on-error&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="version-control"&gt;
&lt;h2&gt;Version Control&lt;/h2&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="22%" /&gt;
&lt;col width="78%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;C-x v v&lt;/td&gt;
&lt;td&gt;commit (C-c C-c結束)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;C-x v d&lt;/td&gt;
&lt;td&gt;version control status&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="adv-mode"&gt;
&lt;h2&gt;Adv. Mode&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://jblevins.org/projects/deft/"&gt;Deft&lt;/a&gt; - 快速找筆記, 檔案修改工具&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="configure"&gt;
&lt;h2&gt;configure&lt;/h2&gt;
&lt;div class="section" id="font"&gt;
&lt;h3&gt;Font&lt;/h3&gt;
&lt;p&gt;M-x describe-font 看現在用的字形&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://sites.google.com/site/steveyegge2/my-dot-emacs-file"&gt;my-dot-emacs-file - steveyegge2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="docs"></category></entry><entry><title>Elscreen - Emacs好用的tab mode</title><link href="http://blog.suhen.org/computer/emacs_elscreen.html" rel="alternate"></link><updated>2013-04-23T17:28:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-04-23:computer/emacs_elscreen.html</id><summary type="html">&lt;p&gt;我以為在Emacs一直沒有好的tab顯示模式，以前用過 &lt;a class="reference external" href="http://emacswiki.org/emacs/TabBarMode"&gt;tabbar mode&lt;/a&gt; ，也覺得不是很好用，原來只是我固陋寡聞沒見過ElScreen這個elist套件。&lt;/p&gt;
&lt;p&gt;下載elscreen.el: &lt;a class="reference external" href="ftp://ftp.morishima.net/pub/morishima.net/naoto/ElScreen/"&gt;ftp://ftp.morishima.net/pub/morishima.net/naoto/ElScreen/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;elscreen.el只有一個檔案，但是他要依附一套 &lt;a class="reference external" href="https://github.com/jeffgran/APEL"&gt;APEL&lt;/a&gt; 才可以運作。&lt;/p&gt;
&lt;pre class="literal-block"&gt;
;; elscreen
(add-to-list 'load-path (concat my-path &amp;quot;goodies/APEL&amp;quot;))
(load &amp;quot;elscreen&amp;quot; &amp;quot;ElScreen&amp;quot; )
(setq elscreen-display-tab t)

(global-set-key (kbd &amp;quot;C-x t&amp;quot;) 'elscreen-create)
(global-set-key (kbd &amp;quot;C-x w&amp;quot;) 'elscreen-kill)
(global-set-key (kbd &amp;quot;M-t&amp;quot;) 'elscreen-previous) ;;transpose-words
(global-set-key (kbd &amp;quot;M-n&amp;quot;) 'elscreen-next)
&lt;/pre&gt;
&lt;p&gt;參考:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://d.hatena.ne.jp/plasticster/20110825/1314271209"&gt;elscreen 改め tabbar のインストールログ - テクノ組曲&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://emacs-fu.blogspot.tw/2009/07/keeping-related-buffers-together-with.html"&gt;emacs-fu: keeping related buffers together with elscreen&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="note"></category></entry><entry><title>Pelican - 邁向靜態blog之路 (reST and markdown)</title><link href="http://blog.suhen.org/computer/pelican.html" rel="alternate"></link><updated>2013-04-11T12:57:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-04-11:computer/pelican.html</id><summary type="html">&lt;p&gt;一直想用純HTML來寫blog，做筆記，最早用PHP的&lt;a href="https://www.dokuwiki.org"&gt;Dokuwiki&lt;/a&gt; ，不想被PHP server綁住，改用Emacs的&lt;a href="http://orgmode.org"&gt;Org-mode&lt;/a&gt;, org的編輯功能超強大，也可以輸出HTML，但要擴展或改template就不是很方便了。之後又接觸了&lt;a href="http://blog.suhen.org/computer/rest_sphinx.html"&gt;ReStructuredText&lt;/a&gt;, 因為看到大部分Python的文件都用Sphinx產生。但是他又不是blog（長的不像）。Ruby有Octopress，無意間看到Python也有Pelican，安裝方便，預設板型漂亮，容易整合目前當紅的網路服務，reST格式我可以很容易把之前的筆記轉過來，還是覺得純文字檔才是王道阿。&lt;/p&gt;
&lt;p&gt;用了github控管我的內容，順便也使用github pages，放置我的靜態網頁，只要開一個repository，把要發佈的內容放到gh-pages的orphan branch就可以了。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://help.github.com/articles/creating-project-pages-manually"&gt;Creating Project Pages manually · GitHub Help&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Quick-start&lt;/h1&gt;
&lt;p&gt;安裝:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip install pelican
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;開始:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir blog
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;blog
&lt;span class="nv"&gt;$ &lt;/span&gt;pelican-quickstart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;快速產生相關的設定&lt;/p&gt;
&lt;p&gt;寫第一篇文章:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;vim content/first.rst
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;工具指令:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;make html &lt;span class="c"&gt;# 顧名思義&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;make clean 
&lt;span class="nv"&gt;$ &lt;/span&gt;make rsync_upload &lt;span class="c"&gt;# 用rsync上傳到你的ssh host&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;make serve &lt;span class="c"&gt;# 啟動python的SimpleHTTPServer&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;make devserver &lt;span class="c"&gt;# 修改rst會自動reload, 重啓server&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;make github &lt;span class="c"&gt;#自動執行ghp-import到github pages&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;文章格式 (reST, markdown)&lt;/h1&gt;
&lt;p&gt;屬性:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# rst
hello
############
:date: 2013-04-14 (必填)
:category: music
:tags: foo, bar
:slug:
:lang:
:author:
:status: draft (不會處理)

#md
Title: hello
Date: 2013-04-14 (必填)
Category: music
Tags: foo, bar
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;圖片:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# rst
.. image:: /path/to/filename.jpg
           :height: 450 px
           :width: 600 px
           :alt: alternate text

# md
![title](/path/to/filename.jpg)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;連結:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# rst
`title &amp;lt;http://foo.bar&amp;gt;`__ 跟reST一樣

this is a foo_ .
_foo: http://foo.bar

# md
[title](http://foo.bar)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;內部連結:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# reST
`京都行 &amp;lt;|filename|/travel/2012_kyoto_marathon-1.rst&amp;gt;`_

# markdown
[玉山小檗](|filename|/nature/plant/0005-玉山小檗.rst)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;區塊:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# rst
foo::

  spam spam spam spam

# md

    spam spam spam spam
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;syntax highlight:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# rst
.. code-block:: python

import os

# md
    :::c++
    :::python
    :::text
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;git hub&lt;/h1&gt;
&lt;h2&gt;環境設定&lt;/h2&gt;
&lt;p&gt;python要用virtualenv才是王道:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkvirtualenv sillywalk.org
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;sillkwalk.org
&lt;span class="nv"&gt;$ &lt;/span&gt;setvirtualenvproject
&lt;span class="nv"&gt;$ &lt;/span&gt;workon sillywalk.org

&lt;span class="nv"&gt;$ &lt;/span&gt;pip install pelican
&lt;span class="nv"&gt;$ &lt;/span&gt;pip install ghp-import &lt;span class="c"&gt;# 方便發佈到github pages的工具&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;產生HTML，發佈&lt;/h2&gt;
&lt;p&gt;產生HTML內容:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pelican -s pelican.conf.py .
&lt;span class="nv"&gt;$ &lt;/span&gt;ghp-import output
&lt;span class="nv"&gt;$ &lt;/span&gt;git push origin gh-pages

&lt;span class="c"&gt;# 其實pelican的make就可以了&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;make github
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;自訂domain&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;在你的domain設定指向github的IP&lt;/li&gt;
&lt;li&gt;在發佈的gh-pages branch下放一個CNAME檔案，裡面寫你的domain&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;放在output目錄的CNAME在每次build時都會被洗掉，所以要每次自動copy。&lt;/p&gt;
&lt;p&gt;先產生content/extra/CNAME，然後在pelicanconf.py加入:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;FILES_TO_COPY = (
    (&amp;#39;extra/CNAME&amp;#39;, &amp;#39;CNAME&amp;#39;),
)
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;用reST (reStructuredText) 還是markdown好?&lt;/h1&gt;
&lt;p&gt;活在Python世界，很多文件是reST編寫的，當初在選用Pelican當blog時也是用預設的reST格式。&lt;/p&gt;
&lt;p&gt;但是reST還是有一些很討厭的地方，像:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;連結的語法我永遠很難記得，都是用自己寫的javascript bookmarklet解決&lt;/li&gt;
&lt;li&gt;連結跟內容文字之間要有空白，不然會錯，除非加上跳脫字元 &lt;strong&gt;/&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;標題用 ######...，長度要跟標題文字一樣長，雖然編輯器都有快速鍵可以補齊，但是還是會在修改標題後，常常忘了補滿而出現錯誤&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;簡潔的markdown實在比reST好用很多，不過，預設沒有表格 (table)的語法。所以，如果用到表格，或是覺得以後要用Sphinx產生文件，減少轉換問題，就用reST，其他一般用markdown。&lt;/p&gt;
&lt;p&gt;markdown可以直接貼HTML也是超級方便的!&lt;/p&gt;
&lt;h2&gt;補充&lt;/h2&gt;
&lt;p&gt;bookmarklet:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// reST&lt;/span&gt;
&lt;span class="nx"&gt;javascript&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;`&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;decodeURIComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;lt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;decodeURIComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;`__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;win&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;_new&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;location=no,links=no,scrollbars=no,toolbar=no,width=550,height=150&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="nx"&gt;win&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;form&amp;gt;&amp;lt;textarea name=&amp;quot;a&amp;quot; rows=&amp;quot;5&amp;quot; cols=&amp;quot;50&amp;quot; onClick=&amp;quot;javascript:this.form.a.focus();this.form.a.select();&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;/textarea&amp;gt;&amp;lt;/form&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);})()&lt;/span&gt;
&lt;span class="c1"&gt;// markdown&lt;/span&gt;
&lt;span class="nx"&gt;javascript&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;[&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;decodeURIComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;](&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;decodeURIComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;win&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;_new&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;location=no,links=no,scrollbars=no,toolbar=no,width=550,height=150&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="nx"&gt;win&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;form&amp;gt;&amp;lt;textarea name=&amp;quot;a&amp;quot; rows=&amp;quot;5&amp;quot; cols=&amp;quot;50&amp;quot; onClick=&amp;quot;javascript:this.form.a.focus();this.form.a.select();&amp;quot;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;/textarea&amp;gt;&amp;lt;/form&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);})()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;參考&lt;/h1&gt;
&lt;h2&gt;靜態blog generator&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Hyde (看起來很複雜，沒仔細看) - http://ringce.com/hyde&lt;/li&gt;
&lt;li&gt;Nikola 有image gallery (把圖片丟到某個目錄下就好了) - http://nikola.ralsina.com.ar/&lt;/li&gt;
&lt;li&gt;mynt - http://mynt.mirroredwhite.com/&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;deploy to github&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.openfoundry.org/tw/tech-column/8516-pythons-virtual-environment-and-multi-version-programming-tools-virtualenv-and-pythonbrew"&gt;Python 的虛擬環境及多版本開發利器─Virtualenv 與 Pythonbrew - OpenFoundry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.getpelican.com/en/3.0/tips.html"&gt;Tips — Pelican 3 documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/setting-up-a-custom-domain-with-pages"&gt;Setting up a custom domain with Pages · GitHub Help&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;syntax&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://markdown.tw/"&gt;Markdown 語法說明&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="note"></category></entry><entry><title>Scripting 比較 (draft)</title><link href="http://blog.suhen.org/computer/scripting-bi-jiao-draft.html" rel="alternate"></link><updated>2013-04-09T11:38:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-04-09:computer/scripting-bi-jiao-draft.html</id><summary type="html">&lt;p&gt;PHP, Python, Javascript, Lua&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;易搞混&lt;/h2&gt;
&lt;div class="section" id="hash-dictionary-table"&gt;
&lt;h3&gt;hash/dictionary/table&lt;/h3&gt;
&lt;p&gt;json:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;quot;firstName&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;John&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;quot;lastName&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Smith&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;quot;male&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;quot;age&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;quot;address&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
     &lt;span class="p"&gt;{&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;quot;streetAddress&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;21 2nd Street&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;quot;city&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;New York&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;quot;state&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;NY&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;quot;postalCode&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;10021&amp;quot;&lt;/span&gt;
     &lt;span class="p"&gt;},&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;quot;phoneNumber&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
     &lt;span class="p"&gt;[&lt;/span&gt;
         &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;home&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;quot;number&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;212 555-1234&amp;quot;&lt;/span&gt;
         &lt;span class="p"&gt;},&lt;/span&gt;
         &lt;span class="p"&gt;{&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;fax&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="nt"&gt;&amp;quot;number&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;646 555-4567&amp;quot;&lt;/span&gt;
         &lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;python dictionary:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;dishes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;eggs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;sausage&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;bacon&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;spam&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;lua table:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;foo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;bar&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;e&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="data-type"&gt;
&lt;h2&gt;Data Type&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Array&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# python
arr = [1, 2, 3]

# lua
squares = {1, 4, 9, 16, 25, 36, 49, 64, 81}
squares[1] # 1
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="statement-expression"&gt;
&lt;h2&gt;statement/expression&lt;/h2&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;函式&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;引數&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# python
def func(a, *pargs, **kargs): print a, pargs, kargs
# &amp;gt;&amp;gt;&amp;gt; f(1, 2, 3, x=1, y=2)
# 1 (2, 3) {'y': 2, 'x': 1}
# *pargs: 任意引數 (tuple)
# *kargs: 任意引數 (dict)

# lua
function foo(a, ...)
    print (a)
    print (spam)
end

foo(1, 'lovely') -- 1, nil
foo(1,'lovely') -- 1, lovely
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="lib-funtions"&gt;
&lt;h2&gt;Lib funtions&lt;/h2&gt;
&lt;div class="section" id="string"&gt;
&lt;h3&gt;String&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;substring&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# php
echo substr('abcdef', 1, 3);  // bcd

# python
foostring[a:b]

# javascript
foostring.substr(a,len) // 從a剪取len長度
foostring.subString(a,b) // 從a剪到b

# lua
string.sub( foostring, i [,j] ) // i: start, j:end
foostring:sub(i [,j])
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;string replace&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# python
foostring.replace('old', 'new')

# javascript
var s = &amp;quot;abxxef&amp;quot;;
s.replace(&amp;quot;xx&amp;quot;,&amp;quot;cd&amp;quot;);

# lua
s = &amp;quot;abxxef&amp;quot;
s = s:gsub(&amp;quot;xx&amp;quot;, &amp;quot;cd&amp;quot;)

# php
$foo = str_replace(&amp;quot;old&amp;quot;, &amp;quot;new&amp;quot;, &amp;quot;STRING&amp;quot;);
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;string format&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# lua
string.format(&amp;quot;%02d/%02d/%04d&amp;quot;, d, m, y)
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;upper lower&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# Lua
string.upper(s)
s:upper()
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;string to array&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# php
explode(',', $string)

# python
str.split(',')

# lua
split(&amp;quot;a,b,c&amp;quot;, &amp;quot;,&amp;quot;) --&amp;gt; {&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;}
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;array to string&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# php
implode(1,, $array);

# python
str.join(list)

# lua
table.concat({&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;}, &amp;quot;,&amp;quot;) --&amp;gt; &amp;quot;a,b,c&amp;quot;
&lt;/pre&gt;
&lt;p&gt;頭尾空白 Jinja2
php trim($string)
python s.strip()&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="array"&gt;
&lt;h3&gt;Array&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;append&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# python
t.append(21)

# lua
table.insert(t, 21)
&lt;/pre&gt;
&lt;p&gt;** array length**&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# Python
len(arr) # arr.count(&amp;quot;foo&amp;quot;) 是算&amp;quot;foo&amp;quot;在arr裡出現幾次

# PHP
count(arr)

# Lua
#arr
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;PHP&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="nv"&gt;$arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nv"&gt;$fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;orange&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;banana&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;c&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;apple&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;array_push&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# push&lt;/span&gt;
&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# insert x to i&lt;/span&gt;
&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# delete first&lt;/span&gt;
&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# delete index i&lt;/span&gt;
&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nx"&gt;push&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;ActionScript&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="file"&gt;
&lt;h3&gt;File&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;PHP&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="nv"&gt;$fp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;fopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;foo.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;fwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$fp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;abc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;fclose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$fp&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;explode join&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;foo.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;abc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="math"&gt;
&lt;h3&gt;Math&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# python&lt;/span&gt;
&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c"&gt;# Random float x, 0.0 &amp;lt;= x &amp;lt; 1.0&lt;/span&gt;
&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c"&gt;# Integer from 1 to 10&lt;/span&gt;

&lt;span class="c"&gt;# javascript&lt;/span&gt;
&lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c"&gt;# 0 ~ 0.9999999&lt;/span&gt;

&lt;span class="c"&gt;# lua&lt;/span&gt;
&lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# php&lt;/span&gt;
&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# min: 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;Array&lt;/h3&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="29%" /&gt;
&lt;col width="71%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Reverse&lt;/th&gt;
&lt;th class="head"&gt;&amp;nbsp;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;PHP&lt;/td&gt;
&lt;td&gt;&lt;div class="first last line-block"&gt;
&lt;div class="line"&gt;array_reverse($a);&lt;/div&gt;
&lt;div class="line"&gt;$a = array_reverse($a);&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Python&lt;/td&gt;
&lt;td&gt;&lt;div class="first last line-block"&gt;
&lt;div class="line"&gt;a.reverse()&lt;/div&gt;
&lt;div class="line"&gt;a[::-1]&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;JavaScript&lt;/td&gt;
&lt;td&gt;&lt;div class="first last line-block"&gt;
&lt;div class="line"&gt;a.reverse()&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ActionScript&lt;/td&gt;
&lt;td&gt;&lt;div class="first last line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://hyperpolyglot.org/scripting"&gt;Scripting Languages: PHP, Perl, Python, Ruby - Hyperpolyglot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.php2python.com/"&gt;Php2Python - Python alternatives to PHP functions, classes and libraries - Php2Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="http://code.google.com/p/ppython/wiki/data_convert"&gt;http://code.google.com/p/ppython/wiki/data_convert&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tmp"&gt;
&lt;h3&gt;tmp&lt;/h3&gt;
&lt;p&gt;ternary operator&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="docs"></category></entry><entry><title>Python Web Framework</title><link href="http://blog.suhen.org/computer/python-web-framework.html" rel="alternate"></link><updated>2013-04-09T11:36:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-04-09:computer/python-web-framework.html</id><summary type="html">&lt;div class="section" id="django"&gt;
&lt;h2&gt;Django&lt;/h2&gt;
&lt;div class="section" id="quick-start"&gt;
&lt;h3&gt;Quick Start&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
$ pip install Django
$ django-admin.py startproject mysite
$ python manage.py startapp myapp
&lt;/pre&gt;
&lt;p&gt;check version:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
import django
print django.get_version()
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="docs"&gt;
&lt;h3&gt;docs&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/en/1.3/"&gt;Django | Django documentation | Django documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://djangosnippets.org/snippets/1811/"&gt;Django snippets: django paginator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="flask"&gt;
&lt;h2&gt;Flask&lt;/h2&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;Docs&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://flask.pocoo.org/docs/"&gt;Flask documentation&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/mitsuhiko/flask"&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://jinja.pocoo.org/docs/"&gt;Jinja2 documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://packages.python.org/Flask-SQLAlchemy/"&gt;Flask-SQLAlchemy documentation&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/brosner/sqlalchemy"&gt;github&lt;/a&gt;, &lt;a class="reference external" href="http://docs.sqlalchemy.org/en/latest/index.html"&gt;SQLAlchemy Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://packages.python.org/Flask-Login/"&gt;Flask-Login documentation&lt;/a&gt;, &lt;a class="reference external" href="https://bitbucket.org/leafstorm/flask-login"&gt;leafstorm / flask-login / overview — Bitbucket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://packages.python.org/Flask-WTF/"&gt;Flask-WTF&lt;/a&gt;, &lt;a class="reference external" href="http://wtforms.simplecodes.com/docs/dev/"&gt;WTForms Documentation&lt;/a&gt;, &lt;a class="reference external" href="https://bitbucket.org/danjac/flask-wtf"&gt;danjac / flask-wtf / overview — Bitbucket&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="tips"&gt;
&lt;h3&gt;Tips&lt;/h3&gt;
&lt;p&gt;看Flask版本:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
import flask

flask.__version__
&lt;/pre&gt;
&lt;p&gt;request.args
request.form.getlist('')&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="sqlalchemy"&gt;
&lt;h2&gt;SQLAlchemy&lt;/h2&gt;
&lt;div class="section" id="setting"&gt;
&lt;h3&gt;setting&lt;/h3&gt;
&lt;p&gt;sqlite path:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# sqlite://&amp;lt;nohostname&amp;gt;/&amp;lt;path&amp;gt;
# where &amp;lt;path&amp;gt; is relative:
engine = create_engine('sqlite:///foo.db')

# or absolute, starting with a slash:
engine = create_engine('sqlite:////absolute/path/to/foo.db')
&lt;/pre&gt;
&lt;p&gt;import:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
from flask.ext.sqlalchemy import BaseQuery
from sqlalchemy.sql import func
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="schema"&gt;
&lt;h3&gt;schema&lt;/h3&gt;
&lt;p&gt;column parameters:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
primary_key =True
nullable=False
unique=True
default
onupdate
index=True
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.sqlalchemy.org/en/rel_0_7/core/schema.html"&gt;Schema Definition Language — SQLAlchemy 0.7 Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;mapper_args:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
__mapper_args__ = {'order_by': '-created'}
__mapper_args__ = {'order_by': [sort, name]}
__mapper_args__ = {'primary_key':(app_id, num_log)} # 沒有primary key時用!
&lt;/pre&gt;
&lt;p&gt;relationship:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
employees = relationship('Employee',
                backref='company', cascade='all, delete-orphan')

# 原本backref是one-to-many, 如果要one-to-one:
child = relationship(&amp;quot;Child&amp;quot;, backref=backref(&amp;quot;parent&amp;quot;, uselist=False))
&lt;/pre&gt;
&lt;p&gt;relationship+filter:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
products = db.relationship(
    'SaleProductData',
    lazy=&amp;quot;dynamic&amp;quot;,
    backref='sale_event')

products.filter_by(type=1).all()
&lt;/pre&gt;
&lt;p&gt;&lt;a class="reference external" href="http://docs.sqlalchemy.org/en/latest/orm/inheritance.html"&gt;http://docs.sqlalchemy.org/en/latest/orm/inheritance.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;rand:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
from sqlalchemy.sql import func

query.order_by(func.rand())
&lt;/pre&gt;
&lt;p&gt;date:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
query.group_by(func.day(LogUserData.dtime).all()
&lt;/pre&gt;
&lt;p&gt;group by:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
votes = db.session.query(EventDC1Vote,
func.count(uid).label('cnt'), 'uid').group_by('uid').order_by('cnt DESC').all()
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="example"&gt;
&lt;h3&gt;example&lt;/h3&gt;
&lt;p&gt;in/limit/order:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
a_list = self.filter(Article.shop_id==g.shop_id,
             Article.blog_id.in_(blog_id)).\
             order_by('-created').\
             limit(limit).\
             all()
&lt;/pre&gt;
&lt;p&gt;join:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
reg_list = db.session.query(User.name, User.email).\
join(LogUserData, User.id==LogUserData.uid).\
filter(User.email != '', LogUserData.app_id.in_([156, 157])).\
all()

SELECT user.name, user.email, log_user_data.app_id
FROM `user`
LEFT JOIN log_user_data ON user.id = log_user_data.uid
WHERE `email` != '\&amp;quot;\&amp;quot;' and log_user_data.app_id in (156,157)
&lt;/pre&gt;
&lt;p&gt;join, or:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
from sqlalchemy import or_, and_
p = Product.query.join('brand').\
    filter(or_(Product.title.like('%' + s + '%'),
               Brand.name.like('%' + s + '%'))).\
    filter(Product.shop_id==g.shop_id).\
    all()
&lt;/pre&gt;
&lt;p&gt;foreign key constraint&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# database level&lt;/span&gt;
&lt;span class="n"&gt;ForeignKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;category.id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ondelete&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;SET NULL&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# pythen level&lt;/span&gt;
&lt;span class="n"&gt;relationship&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;passive_deletes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;relationship, associate&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# db.Table&lt;/span&gt;
&lt;span class="c"&gt;# class Foo()&lt;/span&gt;
&lt;span class="c"&gt;# class Bar():&lt;/span&gt;
&lt;span class="c"&gt;# foo_id = &amp;#39;foo.id&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Bar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="debug"&gt;
&lt;h3&gt;debug&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pythonhosted.org/Flask-SQLAlchemy/api.html#flask.ext.sqlalchemy.get_debug_queries"&gt;http://pythonhosted.org/Flask-SQLAlchemy/api.html#flask.ext.sqlalchemy.get_debug_queries&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="error"&gt;
&lt;h3&gt;常見error&lt;/h3&gt;
&lt;p&gt;0.8更新:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
'dynamic' loaders cannot be used with many-to-one/one-to-one relationships and/or uselist=False.
&lt;/pre&gt;
&lt;p&gt;0.8以後的SQLAlchemy的relationship如果是是many-to-one, one-to-one的關係用了dynamic loader &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;lazy='dynamic'&lt;/span&gt;&lt;/tt&gt; , 或是加了 &lt;tt class="docutils literal"&gt;uselist=False&lt;/tt&gt; , 都會吐錯誤訊息出來. (以前只是warning)&lt;/p&gt;
&lt;p&gt;changelog (0.8): &lt;a class="reference external" href="http://docs.sqlalchemy.org/en/latest/changelog/changelog_08.html#change-5f7f7241c49f5c13956148d68788a5b4"&gt;http://docs.sqlalchemy.org/en/latest/changelog/changelog_08.html#change-5f7f7241c49f5c13956148d68788a5b4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;文件 (0.7): &lt;a class="reference external" href="http://docs.sqlalchemy.org/en/rel_0_7/orm/collections.html#dynamic-relationship"&gt;http://docs.sqlalchemy.org/en/rel_0_7/orm/collections.html#dynamic-relationship&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;比較&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://lucumr.pocoo.org/2011/7/19/sqlachemy-and-you/"&gt;SQLAlchemy and You | Armin Ronacher's Thoughts and Writings&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="docs"></category></entry><entry><title>blog</title><link href="http://blog.suhen.org/computer/blog.html" rel="alternate"></link><updated>2013-04-02T15:53:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-04-02:computer/blog.html</id><summary type="html">&lt;div class="section" id="http-status-code"&gt;
&lt;h2&gt;HTTP status code&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"&gt;http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="informational-1xx"&gt;
&lt;h3&gt;Informational 1xx&lt;/h3&gt;
&lt;p&gt;HTTP/1.0沒有定義&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;100 Continue, proxy&lt;/li&gt;
&lt;li&gt;101 Switching Protocols, HTTP版本轉換&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="successful-2xx"&gt;
&lt;h3&gt;Successful 2xx&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;200 OK&lt;/li&gt;
&lt;li&gt;201 Created&lt;/li&gt;
&lt;li&gt;202 Accepted&lt;/li&gt;
&lt;li&gt;203 Non-Authoritative Information&lt;/li&gt;
&lt;li&gt;204 No Content&lt;/li&gt;
&lt;li&gt;205 Reset Content&lt;/li&gt;
&lt;li&gt;206 Partial Content&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="redirection-3xx"&gt;
&lt;h3&gt;Redirection 3xx&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;300 Multiple Choices&lt;/li&gt;
&lt;li&gt;301 Moved Permanently&lt;/li&gt;
&lt;li&gt;302 Found&lt;/li&gt;
&lt;li&gt;303 See Other&lt;/li&gt;
&lt;li&gt;304 Not Modified&lt;/li&gt;
&lt;li&gt;305 Use Proxy&lt;/li&gt;
&lt;li&gt;306 (Unused)&lt;/li&gt;
&lt;li&gt;307 Temporary Redirect&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="client-error-4xx"&gt;
&lt;h3&gt;Client Error 4xx&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;400 Bad Request&lt;/li&gt;
&lt;li&gt;401 Unauthorized&lt;/li&gt;
&lt;li&gt;402 Payment Required&lt;/li&gt;
&lt;li&gt;403 Forbidden&lt;/li&gt;
&lt;li&gt;404 Not Found&lt;/li&gt;
&lt;li&gt;405 Method Not Allowed&lt;/li&gt;
&lt;li&gt;406 Not Acceptable&lt;/li&gt;
&lt;li&gt;407 Proxy Authentication Required&lt;/li&gt;
&lt;li&gt;408 Request Timeout&lt;/li&gt;
&lt;li&gt;409 Conflict&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="internal-server-error"&gt;
&lt;h3&gt;500 Internal Server Error&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;501 Not Implemented&lt;/li&gt;
&lt;li&gt;502 Bad Gateway&lt;/li&gt;
&lt;li&gt;503 Service Unavailable&lt;/li&gt;
&lt;li&gt;504 Gateway Timeout&lt;/li&gt;
&lt;li&gt;505 HTTP Version Not Supported&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="docs"></category></entry><entry><title>Ganglia</title><link href="http://blog.suhen.org/computer/ganglia.html" rel="alternate"></link><updated>2013-04-02T11:39:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-04-02:computer/ganglia.html</id><summary type="html">&lt;p&gt;之前用過mumin, 感覺有點吃資源, 設定也麻煩, 試試ganglia&lt;/p&gt;
&lt;p&gt;Ganglia有3個部分:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;gmond -  每一個node都要分別開啟的daemon, 分成sender跟receiver&lt;/li&gt;
&lt;li&gt;gmetad - 詢問gmond儲存數質&lt;/li&gt;
&lt;li&gt;ganglia-web&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="literal-block"&gt;
# config
/etc/ganglia/gmetad.conf # CentOS
/usr/share/ganglia/ # php files
&lt;/pre&gt;
&lt;p&gt;start daemond:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
service gmond start
service gmetad start
&lt;/pre&gt;
&lt;div class="section" id="centos"&gt;
&lt;h2&gt;CentOS&lt;/h2&gt;
&lt;p&gt;進入web介面時出現:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
There was an error collecting ganglia data (127.0.0.1:8652): fsockopen error: Connection refused
&lt;/pre&gt;
&lt;p&gt;解決方法, 重新安裝(dependency問題):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ yum remove ganglia-web ganglia-megtad
$ yum install ganglia-web # 會自動安裝gmetad
$ service gmetad start
&lt;/pre&gt;
&lt;p&gt;&lt;a class="reference external" href="http://sourceforge.net/apps/trac/ganglia/wiki/ganglia_quick_start"&gt;http://sourceforge.net/apps/trac/ganglia/wiki/ganglia_quick_start&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary><category term="note"></category></entry><entry><title>reST – reStructuredText與Sphinx</title><link href="http://blog.suhen.org/computer/rest_sphinx.html" rel="alternate"></link><updated>2013-03-28T00:00:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-03-28:computer/rest_sphinx.html</id><summary type="html">&lt;p&gt;&lt;a class="reference external" href="http://docutils.sourceforge.net/rst.html"&gt;reStructuredText&lt;/a&gt; 是Python &lt;a class="reference external" href="http://docutils.sourceforge.net/index.html"&gt;Docutils: Documentation Utilities&lt;/a&gt; 的一部分, 而 &lt;a class="reference external" href="http://sphinx.pocoo.org/"&gt;Sphinx&lt;/a&gt; 可以更方便產生，管理文件的工具&lt;/p&gt;
&lt;p&gt;縮排用二個或三個空白都可以，Emacs的ReST預設用三個&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;使用&lt;/h2&gt;
&lt;p&gt;安裝:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ pip install Sphinx
&lt;/pre&gt;
&lt;p&gt;某目錄下:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ sphinx-quickstart
&lt;/pre&gt;
&lt;p&gt;會自動設定好conf.py, 和相關檔案&lt;/p&gt;
&lt;p&gt;產生網頁檔:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ make html
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;文件結構&lt;/h2&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;分段&lt;/h3&gt;
&lt;p&gt;用一串連續的=*-^&amp;quot;~等字符來標示，通常用:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
==========
全文標題
==========

大標題
========

小標題
---------

段落
^^^^^^
&lt;/pre&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;中文字用的分段標示要長一點點&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;分隔&lt;/h3&gt;
&lt;p&gt;像HTML裡的 &lt;tt class="docutils literal"&gt;&amp;lt;hr&amp;gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
----
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="inline-markup"&gt;
&lt;h2&gt;修飾字 Inline markup&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;斜體&lt;/em&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
*italic*
&lt;/pre&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;中文不能斜&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;粗體&lt;/strong&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
**bold**
&lt;/pre&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;有底色&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
``有底色``
&lt;/pre&gt;
&lt;p&gt;&amp;quot;修飾字&amp;quot;的前後都要空格，如要跟後面的字相連可以用 &lt;tt class="docutils literal"&gt;\&lt;/tt&gt;跳脫，如: &lt;strong&gt;test&lt;/strong&gt;123:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
**test**\123
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;定義&lt;/h2&gt;
&lt;p&gt;定義:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
what
  Definition of “what”. We add a few words to show the line wrapping.
how
  Definition of “how”.
&lt;/pre&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;what&lt;/dt&gt;
&lt;dd&gt;Definition of “what”. We add a few words to show the line wrapping.&lt;/dd&gt;
&lt;dt&gt;how&lt;/dt&gt;
&lt;dd&gt;Definition of “how”.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="lists"&gt;
&lt;h2&gt;條列 Lists&lt;/h2&gt;
&lt;p&gt;標示字符用*, +, -,等都可以:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
* 第一項

  * 子項目不是只有縮排, 上面要空一行才可以

* 第二項

1. uno
2. dos

a) eins
b) zwai
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="blocks"&gt;
&lt;h2&gt;文字區塊 Blocks&lt;/h2&gt;
&lt;p&gt;以下是區塊, 要空一行和縮排:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
跟你說::

  嘻嘻
&lt;/pre&gt;
&lt;p&gt;註解/警告:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
.. note:: this is a note.
.. warning:: this is a warning.
&lt;/pre&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;this is a note.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="warning"&gt;
&lt;p class="first admonition-title"&gt;Warning&lt;/p&gt;
&lt;p class="last"&gt;this is a warning.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="syntax-highlighting"&gt;
&lt;h3&gt;Syntax Highlighting&lt;/h3&gt;
&lt;div class="section" id="include-source"&gt;
&lt;h4&gt;Include Source&lt;/h4&gt;
&lt;p&gt;會把原始碼印出來。&lt;/p&gt;
&lt;p&gt;Python:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
.. iteralinclude:: example.py
  :linenos:
&lt;/pre&gt;
&lt;p&gt;PHP:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
.. literalinclude:: example.php
  :language: php
  :prepend: &amp;lt;?php
  :append: ?&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;連結&lt;/h2&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;外部連結&lt;/h3&gt;
&lt;p&gt;例子:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
`連結的標題 &amp;lt;http://example.com&amp;gt;`__
`&amp;lt;http://example.com&amp;gt;`
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;內部連結&lt;/h3&gt;
&lt;p&gt;在某個rst文件裡的任何一個地方定義:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
.. _test_label:
&lt;/pre&gt;
&lt;p&gt;連結:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
:ref:`標題文字&amp;lt;test_label&amp;gt;`
&lt;/pre&gt;
&lt;p&gt;或是用:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
:doc:`reST`
&lt;/pre&gt;
&lt;p&gt;會自動把文件標題抓出來:&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="tables"&gt;
&lt;h2&gt;表格 (Tables)&lt;/h2&gt;
&lt;/div&gt;
&lt;div class="section" id="field-list"&gt;
&lt;h2&gt;(Field list)&lt;/h2&gt;
&lt;/div&gt;
&lt;div class="section" id="explicit-markup"&gt;
&lt;h2&gt;Explicit Markup&lt;/h2&gt;
&lt;/div&gt;
&lt;div class="section" id="extensions"&gt;
&lt;h2&gt;extensions&lt;/h2&gt;
&lt;div class="section" id="graphviz"&gt;
&lt;h3&gt;graphviz&lt;/h3&gt;
&lt;p&gt;conf.py的extension加入:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
extensions = ['sphinx.ext.graphviz']
&lt;/pre&gt;
&lt;p&gt;語法:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
.. graphviz::

   digraph foo {
      &amp;quot;bar&amp;quot; -&amp;gt; &amp;quot;baz&amp;quot;;
   }
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="comments"&gt;
&lt;h3&gt;Comments 註解&lt;/h3&gt;
&lt;p&gt;單行:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
.. This is a comment.
&lt;/pre&gt;
&lt;p&gt;區塊:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
..
   This whole indented block
   is a comment.

   Still in the comment.
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h2&gt;參考資料&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://people.ee.ethz.ch/~creller/web/tricks/reST.html"&gt;reST – reStructuredText — Bits and Pieces&lt;/a&gt; - 簡潔扼要, 還有附Emacs的ReST mode&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://packages.python.org/an_example_pypi_project/sphinx.html#restructured-text-rest-resources"&gt;Documenting Your Project Using Sphinx — an_example_pypi_project v0.0.5 documentation&lt;/a&gt; -&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://openalea.gforge.inria.fr/doc/openalea/doc/_build/html/source/sphinx/rest_syntax.html"&gt;3.6.1. Restructured Text (reST) and Sphinx CheatSheet — openalea.doc v0.8.0 documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://packages.python.org/an_example_pypi_project/sphinx.html"&gt;Documenting Your Project Using Sphinx — an_example_pypi_project v0.0.5 documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="docs"></category></entry><entry><title>Software</title><link href="http://blog.suhen.org/computer/software.html" rel="alternate"></link><updated>2013-03-28T00:00:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-03-28:computer/software.html</id><summary type="html">&lt;div class="section" id="desktop-tips"&gt;
&lt;h2&gt;Desktop Tips&lt;/h2&gt;
&lt;div class="section" id="system"&gt;
&lt;h3&gt;System&lt;/h3&gt;
&lt;div class="section" id="mac-osx"&gt;
&lt;h4&gt;Mac OSX&lt;/h4&gt;
&lt;p&gt;zoom in/out: Command Opt =/-&lt;/p&gt;
&lt;p&gt;強制結束: Command Opt Esc&lt;/p&gt;
&lt;p&gt;區域截圖: Command Shift 4&lt;/p&gt;
&lt;p&gt;顯示User Library: 在Finder裡的Go(前往), 按住option, 就會出現&lt;/p&gt;
&lt;p&gt;輸入特殊符號: Command + option + T&lt;/p&gt;
&lt;p&gt;放大縮小: Command + &amp;quot;+&amp;quot; / Command + &amp;quot;-&amp;quot;&lt;/p&gt;
&lt;p&gt;無線網路密碼&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;到&amp;quot;鑰匙圈存取&amp;quot;: Finder -&amp;gt; 工具程式 -&amp;gt; 鑰匙圈存取&lt;/li&gt;
&lt;li&gt;找基地台名稱, 分類是&amp;quot;AirPort網路密碼&amp;quot;, 顯示密碼&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="browser"&gt;
&lt;h3&gt;Browser&lt;/h3&gt;
&lt;div class="section" id="firefox"&gt;
&lt;h4&gt;Firefox&lt;/h4&gt;
&lt;p&gt;快速鍵 (整理過, 只列出自己常用):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# bookmark
Ctrl+B   顯示bookmark (側邊欄)
Ctrl+D   加入bookmark

# tab
Ctrl+T   開新tab
Ctrl+W   關Tab
Ctrl+tab 下一個tab
Ctrl+PageUp/PageDown 上/下一個tab

# window/frame
Ctrl+L 移到網址列
Ctrl+J download
F6     move to frame

# search
Ctrl+F   search
Ctrl+G   search next
Shift+F3 serach privious

# other
Alt+Enter open link in new tab
F11 fullscreen
F7 鍵盤瀏覽
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="developer-s-tools"&gt;
&lt;h4&gt;Developer's tools&lt;/h4&gt;
&lt;p&gt;scratchpad: 按shift+F4&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;[重新介紹 Firefox 開發者工具之二 | 訊息中心 | Mozilla Taiwan](&lt;a class="reference external" href="http://blog.mozilla.com.tw/posts/4200/reintroducing-the-firefox-developer-tools-part-2-the-scratchpad-and-the-style-editor"&gt;http://blog.mozilla.com.tw/posts/4200/reintroducing-the-firefox-developer-tools-part-2-the-scratchpad-and-the-style-editor&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="browser-plugin-extensions"&gt;
&lt;h4&gt;Browser plugin/extensions&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;顯示網站使用fromeworks, web server, service...&lt;ul&gt;
&lt;li&gt;[GC] &lt;a class="reference external" href="http://www.nqbao.com/chrome-sniffer"&gt;Chrome Sniffer | Bao's Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[FF] &lt;a class="reference external" href="http://wappalyzer.com/"&gt;Wappalyzer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;好用軟體&lt;/h2&gt;
&lt;div class="section" id="internet"&gt;
&lt;h3&gt;Internet&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;bt - Deluge (Linux)&lt;/li&gt;
&lt;li&gt;IRC Client (OS X)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="ebook"&gt;
&lt;h3&gt;ebook&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://calibre-ebook.com/"&gt;calibre - E-book management&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;系統工具&lt;/h3&gt;
&lt;p&gt;osx mount ext2/3: &lt;a class="reference external" href="http://osxfuse.github.com/"&gt;FUSE for OS X&lt;/a&gt; + &lt;a class="reference external" href="http://sourceforge.net/projects/fuse-ext2/"&gt;fuse-ext2&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="devtools"&gt;
&lt;h3&gt;DevTools&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.pixelwindowapp.com/"&gt;PixelWindow&lt;/a&gt; resolution ruler&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="command-line"&gt;
&lt;h2&gt;Command Line&lt;/h2&gt;
&lt;div class="section" id="tmux"&gt;
&lt;h3&gt;tmux&lt;/h3&gt;
&lt;p&gt;# 開新視窗
C-b c&lt;/p&gt;
&lt;p&gt;# 前/後一個視窗
C-b n/p&lt;/p&gt;
&lt;p&gt;# 分割上下視窗
C-b &amp;quot;&lt;/p&gt;
&lt;p&gt;# 分割左右視窗
C-b %&lt;/p&gt;
&lt;p&gt;# 重整視窗(幫你排)
C-b SPACE&lt;/p&gt;
&lt;p&gt;# 調整視窗大小
C-b 按著不放再按上下左右&lt;/p&gt;
&lt;p&gt;# 移動到另一視窗
C-b 上下左右
C-b o&lt;/p&gt;
&lt;p&gt;# 視窗交換位址&lt;/p&gt;
&lt;p&gt;C-b C-o&lt;/p&gt;
&lt;p&gt;# 顯示時間
C-b t&lt;/p&gt;
&lt;p&gt;# 把目前tmux session丟到背景去 (回到原本terminal)
C-b d&lt;/p&gt;
&lt;p&gt;# 回到剛才的tmux session
tmux attach&lt;/p&gt;
&lt;p&gt;# help
C-b ?&lt;/p&gt;
&lt;p&gt;scroll:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Ctrl-b [ 上/下/左/右 , q 離開
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="tools"&gt;
&lt;h2&gt;Tools&lt;/h2&gt;
&lt;div class="section" id="dot-grphviz"&gt;
&lt;h3&gt;dot (grphviz)&lt;/h3&gt;
&lt;p&gt;example:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
digraph foo {
  hello [shape=&amp;quot;diamond&amp;quot;, label=&amp;quot;hihi \nhello&amp;quot;]
  world
  hello -&amp;gt; world [label=&amp;quot;Y&amp;quot;]
}
&lt;/pre&gt;
&lt;p&gt;輸出png:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
dot foo.dot -Tpng -o foo.png
&lt;/pre&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;-T: format -o: output&lt;/p&gt;
&lt;/div&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;註解用/* */ 或 //，像C++一樣&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;ref:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.graphviz.org/content/node-shapes"&gt;Node Shapes | Graphviz - Graph Visualization Software&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.graphviz.org/content/dot-language"&gt;The DOT Language | Graphviz - Graph Visualization Software&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.graphviz.org/Gallery.php"&gt;Gallery | Graphviz - Graph Visualization Software&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="ffmpeg"&gt;
&lt;h3&gt;ffmpeg&lt;/h3&gt;
&lt;p&gt;usage:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ffmpeg -i [source] [target]
&lt;/pre&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;-vcodec&lt;/p&gt;
&lt;/div&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;-s 100x100&lt;/p&gt;
&lt;/div&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;-t 10 (前10秒)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;-vf crop=100:100 (切中間100x100), crop=in_w-480:in_h(左右各切240)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;-aspect 4:3&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;列出所有codecs:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ ffmpeg -codecs
&lt;/pre&gt;
&lt;p&gt;列出所有file format:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ ffmpeg -formats
&lt;/pre&gt;
&lt;div class="section" id="tips"&gt;
&lt;h4&gt;Tips&lt;/h4&gt;
&lt;p&gt;右上角watermark:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ ffmpeg –i inputvideo.avi -vf &amp;quot;movie=watermarklogo.png [watermark]; [in][watermark] overlay=main_w-overlay_w-10:10 [out]&amp;quot; outputvideo.flv
&lt;/pre&gt;
&lt;p&gt;via: &lt;a class="reference external" href="http://www.idude.net/index.php/how-to-watermark-a-video-using-ffmpeg/"&gt;How to watermark a video using FFmpeg | iDude.net&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;examples:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ffmpeg -i filename.webm -acodec libmp3lame -aq 4 filename.mp3
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;System&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Mac 更新到iOX 10.9, pip安裝出現錯誤 (gcc編譯相關)&lt;ol class="arabic"&gt;
&lt;li&gt;更新xcode&lt;/li&gt;
&lt;li&gt;sudo xcodebuild -license&lt;/li&gt;
&lt;li&gt;xcode-select --install&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</summary><category term="docs"></category></entry><entry><title>UNIX Command 常用指令</title><link href="http://blog.suhen.org/computer/unix_command.html" rel="alternate"></link><updated>2013-03-28T00:00:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-03-28:computer/unix_command.html</id><summary type="html">&lt;div class="section" id="script"&gt;
&lt;h2&gt;好用script&lt;/h2&gt;
&lt;p&gt;把&amp;quot;/t&amp;quot;分隔的檔案轉成sql語法, 用awk和sed&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;awk -F &lt;span class="s1"&gt;&amp;#39;\t&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print &amp;quot;INSERT INTO word (\&amp;quot;s3id\&amp;quot;,\&amp;quot;content\&amp;quot;,\&amp;quot;freq\&amp;quot;,\&amp;quot;translate\&amp;quot;,\&amp;quot;ex1\&amp;quot;,\&amp;quot;ex1_translate\&amp;quot;,\&amp;quot;ex2\&amp;quot;,\&amp;quot;ex2_translate\&amp;quot;) VALUES(\&amp;quot;&amp;quot;$1&amp;quot;\&amp;quot;,\&amp;quot;&amp;quot;$2&amp;quot;\&amp;quot;,\&amp;quot;&amp;quot;$3&amp;quot;\&amp;quot;,\&amp;quot;&amp;quot;$4&amp;quot;\&amp;quot;,\&amp;quot;&amp;quot;$5&amp;quot;\&amp;quot;,\&amp;quot;&amp;quot;$6&amp;quot;\&amp;quot;,\&amp;quot;&amp;quot;$7&amp;quot;\&amp;quot;,\&amp;quot;&amp;quot;$8&amp;quot;\&amp;quot;);&amp;quot;}&amp;#39;&lt;/span&gt; data_all_u.txt | sed -e &lt;span class="s1"&gt;&amp;#39;s/^M//g&amp;#39;&lt;/span&gt; &amp;gt; out.sql
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;先用awk轉好, 再用sed去除最後換行符號, &amp;quot;^M&amp;quot;在commend-line裡要Ctrl-V + Ctrl-M表示&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;檔案&lt;/h2&gt;
&lt;p&gt;把檔案foo複製到以下全部目錄裡:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ find . -type d |xargs -n 1 cp -i foo
&lt;/pre&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name" /&gt;
&lt;col class="field-body" /&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;xargs -n 1:&lt;/th&gt;&lt;td class="field-body"&gt;把每一行command line輸出當作一個參數&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;cp -i:&lt;/th&gt;&lt;td class="field-body"&gt;詢問y or n&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;改檔名&lt;/h3&gt;
&lt;p&gt;大寫改小寫:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ for i in $( ls | grep [A-Z] ); do mv -i $i `echo $i | tr 'A-Z' 'a-z'`; done
&lt;/pre&gt;
&lt;p&gt;只取數字, JPG改jpg:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
for i in *.JPG ; do mv &amp;quot;$i&amp;quot; `echo $i | tr -dc '[0-9]'`&amp;quot;.jpg&amp;quot; ; done
&lt;/pre&gt;
&lt;p&gt;for loop:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
for f in *.html; do
    base=`basename $f .html`
    mv $f $bae.php
done
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;找檔案&lt;/h3&gt;
&lt;p&gt;找目錄名稱:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ find / -type d -name &amp;quot;dir_name&amp;quot;
&lt;/pre&gt;
&lt;p&gt;刪除5分鐘內建立的檔案:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ find -cmin -5 -type f -exec rm -rf {} \;
&lt;/pre&gt;
&lt;p&gt;找出體積最大前十檔案/目錄:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ du -a /home | sort -n -r | head -n 10
&lt;/pre&gt;
&lt;p&gt;via: &lt;a class="reference external" href="http://www.hkcode.com/linux-bsd-notes/693"&gt;Linux 下找出體積最大的檔案/目錄 – 網絡技術日誌&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;某目錄下的全部檔案的字串:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ grep -rl flaskext . |xargs sed -i -e 's/flaskext/flask.ext/'
&lt;/pre&gt;
&lt;p&gt;via: &lt;a class="reference external" href="http://www.commandlinefu.com/commands/view/4698/recursive-search-and-replace-old-with-new-string-inside-files"&gt;recursive search and replace old with new string, inside files | commandlinefu.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;列出各目錄大小(不顯示子目錄):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
du -h | grep -v '[a-z]/.'
&lt;/pre&gt;
&lt;p&gt;coding convert:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
# big5 to utf-8
$ iconv -f big5 -t utf-8 big5.txt -o utf8.txt

# 簡體轉繁體
$ cat test.txt | iconv -f gb2312 -t big5

# 繁體轉簡體
$ cat test.txt | iconv -f big5 -t gb2312

# Big5 編碼跟 UTF-8 編碼之間的轉換,如 UTF-8 轉 Big5
$ cat test.txt | iconv -f utf-8 -t big5
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;編輯&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://coolshell.cn/articles/9070.html"&gt;AWK 简明教程 | 酷壳 - CoolShell.cn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;vim硬是要存檔:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
:w !sudo tee %
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;網路&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
$ lsof -i # monitors network connections in real time
$ iftop # shows bandwith usage per *connection*
$ nethogs #shows the bandwith usage per *process*

# iOS
$ sudo lsof -i -P
$ lsof -n -i4TCP:5000 | grep LISTEN # 找出port5000
&lt;/pre&gt;
&lt;p&gt;rsync:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ rsync -av /etc /tmp () # 將 /etc/ 的資料備份到 /tmp/etc 內(local)
$ rsync -av -e ssh user&amp;#64;host:/etc /tmp 將遠端 /etc 備份到local主機的 /tmp 內
&lt;/pre&gt;
&lt;p&gt;dns:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
dig foobar.com        # simple query
dig +trace foobar.com # detail
dig +short foobar.com # 不廢話
dig foobar.com mx
&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;.&lt;/em&gt; 表示the root of the hierarchy&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.longwin.com.tw/2010/02/netstat-check-connect-2010/"&gt;使用 netstat 找出不正常的連線 | Tsung's Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="service"&gt;
&lt;h2&gt;Service&lt;/h2&gt;
&lt;p&gt;關掉uwsgi的process:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ps ca|grep uwsgi |awk '{ print $1}' | xargs --no-run-if-empty sudo kill -9
&lt;/pre&gt;
&lt;p&gt;快速靜態檔案server:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ python -m SimpleHTTPServer 8080
&lt;/pre&gt;
&lt;div class="section" id="crontab"&gt;
&lt;h3&gt;Crontab&lt;/h3&gt;
&lt;p&gt;分鐘 小時 日期 月份 週&lt;/p&gt;
&lt;p&gt;每5min一次:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
*/5 * * * * /home/moogoo/test.sh
5 0 * * *
&lt;/pre&gt;
&lt;p&gt;每小時:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
01 * * * * /home/moogoo/test.sh
&lt;/pre&gt;
&lt;p&gt;每天(半夜):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
0 0 * * *
&lt;/pre&gt;
&lt;p&gt;每週:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
0 0 * * 0
&lt;/pre&gt;
&lt;p&gt;每月:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
0 0 1 * *
&lt;/pre&gt;
&lt;p&gt;start:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
service crond start
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="system"&gt;
&lt;h2&gt;System&lt;/h2&gt;
&lt;p&gt;語系:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ locale -a # 目前系統支援語系
$ dpkg-reconfigure locales 安裝語系
&lt;/pre&gt;
&lt;/div&gt;
</summary><category term="docs"></category></entry><entry><title>GIT</title><link href="http://blog.suhen.org/computer/git.html" rel="alternate"></link><updated>2013-03-23T00:00:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-03-23:computer/git.html</id><summary type="html">&lt;div class="section" id="quick-start"&gt;
&lt;h2&gt;Quick Start&lt;/h2&gt;
&lt;div class="section" id="init"&gt;
&lt;h3&gt;init&lt;/h3&gt;
&lt;p&gt;Server (Repository):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mkdir example.git
cd example.git
git --bare init # init加--bare, 表示只會在當下目錄放git的東西，不會有原始檔案, 如果要原始檔案再git clone出來就有了
&lt;/pre&gt;
&lt;p&gt;Client:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
mkdir example
cd example
git init
touch README
git add README
git commit -m 'first commit'
git remote add origin ssh://USERNAME&amp;#64;REMOTE_SERVER/~/example.git
git push origin master (第一次之後只要打git push就可以了)
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="basic"&gt;
&lt;h2&gt;Basic&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Tree Roles&lt;/strong&gt;&lt;/p&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name" /&gt;
&lt;col class="field-body" /&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;HEAD:&lt;/th&gt;&lt;td class="field-body"&gt;最後一次的commit (Repo)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;Index:&lt;/th&gt;&lt;td class="field-body"&gt;目前要commit的 (Staging)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;Working Dir:&lt;/th&gt;&lt;td class="field-body"&gt;目前修改工作區&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="git-command"&gt;
&lt;h2&gt;git command&lt;/h2&gt;
&lt;div class="section" id="git-clone-add"&gt;
&lt;h3&gt;git clone / add&lt;/h3&gt;
&lt;p&gt;git clone:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git clone file:////home/somebody/repo/foo.git
git clone ssh://host/~/repo/foo.git
    git clone --bare /path/to/repo # 把原本的repo轉成bare出來
&lt;/pre&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;git pull origin master相當於git fetch和git merge origin/master&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;git add:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git add .
git add -a
git add foo
git add -u # 只加修改過的檔案, 新增的檔案不加入.
git add -i # 進入互動模式
&lt;/pre&gt;
&lt;p&gt;git rm/mv:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git rm foo
git mv foo bar

git rm --cached # 從版本控管裡那掉，保留原檔
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="git-reset-revert"&gt;
&lt;h3&gt;git reset / revert&lt;/h3&gt;
&lt;p&gt;reset: 移動HEAD, 更改SHA referenct(git記錄), 檔案還是目前最新的狀態
還沒commit&lt;/p&gt;
&lt;p&gt;revert: rollback, 並且會有一個新的commit(不像reset是回到某個commit)&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://progit.org/2011/07/11/reset.html"&gt;Pro Git - Reset Demystified&lt;/a&gt;
git reset:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git reset --soft HEAD~ # HEAD指回the parent of HEAD, Index和Working Directory都不動(因為soft嘛)
# 改一改再commit一次, 就是git commit --amend在做的事情一樣
(修改放到staging area?)
git reset [--mixed] HEAD~ # update Staging Area, 沒有打參數預設就是這個 (把stage的檔案給unstage?)
git reset --hard HEAD~ # 完全清除, reset the working tree to the last commit
#會改到檔案要注意
&lt;/pre&gt;
&lt;p&gt;Tips: 如果反悔可以用git reflog叫出來, 再reset回來&lt;/p&gt;
&lt;p&gt;commit後要回來
git revert (還原commit記錄) # revert是新增一個commit來做還原&lt;/p&gt;
&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;push後就不能reset了, 如果已經push後就要用revert&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;git revert:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git revert HEAD # 回上一次commit, 並產生一個新的commit log
This will create a new commit which undoes the change in HEAD
git revert HEAD^ # 回上上一次commit
git revert [SHA] # 回到此commit **之前**\的狀態, 也是產生一個新的commit log
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="git-log"&gt;
&lt;h3&gt;git log&lt;/h3&gt;
&lt;p&gt;git log:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git log --stat
git log --stat --summary # 查每個版本間的更動檔案和行數
git log --pretty=format:'%h : %s' --date-order --graph # 依照時間排序
git log --since=&amp;quot;1 day ago&amp;quot; # 今天的
git log --pretty=format:&amp;quot;%h was %an, %ar, message: %s&amp;quot; (--graph)
git log --all # 秀出所有的 log (含 branch)
git log -p # 將所有 log 和修改過得檔案內容列出
git log -S'foo()' # log 裡面有 foo() 這字串的.
git log --pretty=oneline # 秀 log 的方式
git log --pretty=short # 秀 log 的方式
git log --pretty=format:'%h was %an, %ar, message: %s'
git log --pretty=format:'%h : %s' --graph # 會有簡單的文字圖形化, 分支等.
git log --pretty=format:'%h : %s' --topo-order --graph # 依照主分支排序
git log --pretty=format:'%h : %s' --date-order --graph # 依照時間排序
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="git-commit-checkout-stash"&gt;
&lt;h3&gt;git commit / checkout / stash&lt;/h3&gt;
&lt;p&gt;git commit:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git commit -m 'foo message'
git commit --dry-run # 假commit
git commit --no-verify # 不檢查每行程式碼最後是否有空白或tab
git commit --amend -m 'edited message' # 改最後一次commit的的message
# 通常出現錯誤&amp;quot;You have some suspicious patch lines&amp;quot;時用
&lt;/pre&gt;
&lt;p&gt;git checkout:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git checkout branch # 切換 branch
git checkout filename # 從local repo抓回
git checkout HEAD .  TODO
git checkout xxxx . # 將所有檔案都 checkout 出來(xxxx commit 的版本, xxxx 是 commit 的編號前四碼), 注意, 若有修改的檔案都會被還原到上一版. TODO
&lt;/pre&gt;
&lt;p&gt;git stash:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git stash #  丟進暫存區
git stash list # 列出所有暫存區的資料
git stash pop # 取出最新的一筆, 並移除.
git stash apply # 取出最新的一筆 stash 暫存資料. 但是 stash 資料不移除
git stash clear # 把 stash 都清掉
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="git-branch-merge"&gt;
&lt;h3&gt;git branch / merge&lt;/h3&gt;
&lt;p&gt;git branch:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git branch # 看目前的branch
git branch abcd # 開一個名為abcd的新branch
git branch -d abcd # 刪除abcd
git checkout abcd, 移到abcd
git branch abcd # 開新branch, 但不移駕
git co -b abcd 開新branch, 而且移駕到新開的branch
git branch -m old new # rename branch
&lt;/pre&gt;
&lt;p&gt;git merge:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git mergetool kdiff3
git merge --abort, 不要merge了
&lt;/pre&gt;
&lt;p&gt;git分master跟branchA, 在master下 &lt;strong&gt;$ git merge branchA&lt;/strong&gt; 會把branchA更改過的merge到master裡, 反之, 在branchA下 &lt;strong&gt;$ git merge master&lt;/strong&gt; 會把master更新的家到branchA, branchA改過的不會影響master&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="git-tag"&gt;
&lt;h3&gt;git tag&lt;/h3&gt;
&lt;p&gt;加tag:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git tag -a v0.2 -m &amp;quot;this is version 0.2&amp;quot;
git tag -a v0.1.1 #abc123 為某版本加tag
&lt;/pre&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;看此tag的log::&lt;/dt&gt;
&lt;dd&gt;git show v0.1.2&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;刪除:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git tag -d v0.1.2
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="other"&gt;
&lt;h3&gt;other&lt;/h3&gt;
&lt;p&gt;git reflog&lt;/p&gt;
&lt;pre class="literal-block"&gt;
把之前的記錄都叫出來, 包括被git reset掉的, 如果時間久的話會被git洗掉
然後再$ git reset --hard HASH 就回去了
&lt;/pre&gt;
&lt;p&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/5473/undoing-a-git-reset-hard-head1"&gt;version control - Undoing a git reset --hard HEAD~1 - Stack Overflow&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="undo"&gt;
&lt;h3&gt;undo&lt;/h3&gt;
&lt;p&gt;1. 還沒commit
a) git reset --hard HEAD
b) git checkout HEAD hello.rb
2. commit後發現錯誤
a) git revert HEAD # 回上個commit, 並建立一新commit
b) git revert HEAD^ # 回上上個commit, 並建立一新commit
3.
git commit --amend&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://book.git-scm.com/4_undoing_in_git_-_reset,_checkout_and_revert.html"&gt;Git Book - Undoing in Git - Reset, Checkout and Revert&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="tips"&gt;
&lt;h2&gt;Tips&lt;/h2&gt;
&lt;div class="section" id="git-clonebranch"&gt;
&lt;h3&gt;git clone某一個branch&lt;/h3&gt;
&lt;p&gt;以github的Flask當例子，要抓Flask的website branch&lt;/p&gt;
&lt;p&gt;先git clone一份Flask，看所有的branch:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git branch -a
&lt;/pre&gt;
&lt;p&gt;可看到除了master外有一個remotes/origin/website，然後做一個叫website的branch:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git checkout -b website remotes/origin/website
&lt;/pre&gt;
&lt;p&gt;就會抓回到website這個branch，或是要直接拉下來看:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git checkout remotes/origin/experimental
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;other&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.slideshare.net/littlebtc/git-5528339"&gt;寫給大家的 Git 教學&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://nvie.com/posts/a-successful-git-branching-model/"&gt;A successful Git branching model » nvie.com&lt;/a&gt; git開發web方法&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/github/gitignore"&gt;github/gitignore at master - GitHub&lt;/a&gt; gitignore大全&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://gitready.com/"&gt;git ready » learn git one commit at a time&lt;/a&gt; git教學文(因材施教)&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://whygitisbetterthanx.com/"&gt;Why Git is Better Than X&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www-cs-students.stanford.edu/~blynn/gitmagic/"&gt;Git Magic - Preface&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://ihower.tw/blog/archives/6696/?utm_source=feedburner&amp;amp;utm_medium=feed&amp;amp;utm_campaign=Feed:+ihower+({|ihower.tw|+blog+})&amp;amp;utm_content=Google+Reader"&gt;Git 教育訓練課程投影片 (2012) | ihower { blogging }&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="setting"&gt;
&lt;h2&gt;setting&lt;/h2&gt;
&lt;p&gt;Git 2.0 的push.default把預設的設定從 &lt;cite&gt;matching&lt;/cite&gt; 改稱 &lt;cite&gt;simple&lt;/cite&gt;, matching: 預設把目前全部branch push上去, simple只會push目前所在的branch:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
git config --global push.default [matching|simple...]
&lt;/pre&gt;
&lt;p&gt;&lt;a class="reference external" href="http://git-scm.com/docs/git-config.html"&gt;git-config&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary><category term="docs"></category></entry><entry><title>Dynamic DNS setting for Namecheap on Mac OSX</title><link href="http://blog.suhen.org/computer/dynamic-dns-setting-for-namecheap-on-mac-osx.html" rel="alternate"></link><updated>2013-03-21T02:09:00+08:00</updated><author><name>moogoo</name></author><id>tag:blog.suhen.org,2013-03-21:computer/dynamic-dns-setting-for-namecheap-on-mac-osx.html</id><summary type="html">&lt;p&gt;登入Namecheap啓用Dynamic &lt;a class="reference external" href="https://www.namecheap.com/support/knowledgebase/article.aspx/551/51/how-to-setup-dynamic-dns-when-i-use-free-dns-service"&gt;link1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;設定DNS record:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
freedns1.registrar-servers.com
freedns2.registrar-servers.com
freedns3.registrar-servers.com
freedns4.registrar-servers.com
freedns5.registrar-servers.com
&lt;/pre&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.namecheap.com/support/knowledgebase/article.aspx/532/51/how-does-free-dns-work"&gt;link2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安裝Dynamic DNS clinet (以OS X的ddclient為例):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
$ brew install ddclient
&lt;/pre&gt;
&lt;p&gt;在/usr/local/etc/ddclient裡建立ddclient.conf (範例在/usr/local/share/doc/ddclient), 裡面有namecheap的預設選項:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
protocol=namecheap
server=dynamicdns.park-your-domain.com
login=yourdomain.com
password=1b9aafgfgjh1865e024fabb629dbd1d9c462
&amp;#64;
&lt;/pre&gt;
&lt;p&gt;Install the launchd item in /Library/LaunchDaemons, like so:&lt;/p&gt;
&lt;blockquote&gt;
$ sudo cp -vf /usr/local/Cellar/ddclient/3.8.1/homebrew.mxcl.ddclient.plist /Library/LaunchDaemons/
$ sudo chown -v root:wheel /Library/LaunchDaemons/homebrew.mxcl.ddclient.plist&lt;/blockquote&gt;
&lt;p&gt;Start the daemon using:&lt;/p&gt;
&lt;blockquote&gt;
sudo launchctl load /Library/LaunchDaemons/homebrew.mxcl.ddclient.plist&lt;/blockquote&gt;
&lt;p&gt;The next reboot of the system will automatically start ddclient.&lt;/p&gt;
&lt;p&gt;You can adjust the execution interval by changing the value of
StartInterval (in seconds) in /Library/LaunchDaemons/homebrew.mxcl.ddclient.plist,
and then&lt;/p&gt;
&lt;blockquote&gt;
sudo launchctl unload /Library/LaunchDaemons/homebrew.mxcl.ddclient.plist
sudo launchctl load /Library/LaunchDaemons/homebrew.mxcl.ddclient.plist&lt;/blockquote&gt;
</summary><category term="note"></category></entry></feed>